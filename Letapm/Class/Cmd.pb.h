// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

@class AppNetWorkStatus;
@class AppNetWorkStatus_Builder;
@class BatteryData;
@class BatteryData_BatteryItemData;
@class BatteryData_BatteryItemData_Builder;
@class BatteryData_Builder;
@class FpsData;
@class FpsData_Builder;
@class HttpData;
@class HttpData_Builder;
@class HttpError;
@class HttpError_Builder;
@class HttpResponse;
@class HttpResponse_Builder;
@class MemoryWaringData;
@class MemoryWaringData_Builder;
@class MessageReply;
@class MessageReply_Builder;
@class MethodData;
@class MethodData_Builder;
@class MetricData;
@class MetricData_Builder;
@class MetricData_MetricMemoryData;
@class MetricData_MetricMemoryData_Builder;
@class RecvDataReply;
@class RecvDataReply_Builder;
@class SessionMessage;
@class SessionMessage_AppInfo;
@class SessionMessage_AppInfo_Builder;
@class SessionMessage_Builder;
@class SessionMessage_DeviceInfo;
@class SessionMessage_DeviceInfo_Builder;
@class SocketConnect;
@class SocketConnect_Builder;
@class SocketSendRecvData;
@class SocketSendRecvData_Builder;
@class ThreadANR;
@class ThreadANR_Builder;
@class WebViewData;
@class WebViewData_Builder;
typedef enum {
  CmdTypeSession = 888,
  CmdTypeSessionreply = 889,
  CmdTypeRecvdatareply = 999,
  CmdTypeHttpData = 1000,
  CmdTypeSocketConnect = 1010,
  CmdTypeSocketSendrecvData = 1011,
  CmdTypeWebviewData = 1020,
  CmdTypeMethodData = 1030,
  CmdTypeUpdateNetworkStatus = 1040,
  CmdTypeMemoryWaring = 1050,
  CmdTypeMainthreadAnr = 1060,
  CmdTypeMetricData = 1070,
  CmdTypeBatteryData = 1071,
  CmdTypeFpsData = 1072,
  CmdTypeFpsCalamityData = 1073,
} CmdType;

BOOL CmdTypeIsValidValue(CmdType value);

typedef enum {
  HttpErrorTypeHttpErrorTypeHttp = 1,
  HttpErrorTypeHttpErrorTypeNetwork = 2,
} HttpErrorType;

BOOL HttpErrorTypeIsValidValue(HttpErrorType value);

typedef enum {
  MetricTypeMetricNormal = 1,
  MetricTypeMetricDot = 2,
  MetricTypeMetricDotStart = 3,
  MetricTypeMetricDotEnd = 4,
} MetricType;

BOOL MetricTypeIsValidValue(MetricType value);


@interface CmdRoot : NSObject {
}
+ (BatPBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(BatPBMutableExtensionRegistry*) registry;
@end

@interface SessionMessage : BatPBGeneratedMessage {
@private
  BOOL hasAppkey_:1;
  BOOL hasSessionId_:1;
  BOOL hasSdkVersion_:1;
  BOOL hasApp_:1;
  BOOL hasDevice_:1;
  NSString* appkey;
  NSString* sessionId;
  NSString* sdkVersion;
  SessionMessage_AppInfo* app;
  SessionMessage_DeviceInfo* device;
}
- (BOOL) hasAppkey;
- (BOOL) hasApp;
- (BOOL) hasDevice;
- (BOOL) hasSessionId;
- (BOOL) hasSdkVersion;
@property (readonly, retain) NSString* appkey;
@property (readonly, retain) SessionMessage_AppInfo* app;
@property (readonly, retain) SessionMessage_DeviceInfo* device;
@property (readonly, retain) NSString* sessionId;
@property (readonly, retain) NSString* sdkVersion;

+ (SessionMessage*) defaultInstance;
- (SessionMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (SessionMessage_Builder*) builder;
+ (SessionMessage_Builder*) builder;
+ (SessionMessage_Builder*) builderWithPrototype:(SessionMessage*) prototype;

+ (SessionMessage*) parseFromData:(NSData*) data;
+ (SessionMessage*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (SessionMessage*) parseFromInputStream:(NSInputStream*) input;
+ (SessionMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (SessionMessage*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (SessionMessage*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface SessionMessage_AppInfo : BatPBGeneratedMessage {
@private
  BOOL hasName_:1;
  BOOL hasPackageId_:1;
  BOOL hasAppVersion_:1;
  NSString* name;
  NSString* packageId;
  NSString* appVersion;
}
- (BOOL) hasName;
- (BOOL) hasPackageId;
- (BOOL) hasAppVersion;
@property (readonly, retain) NSString* name;
@property (readonly, retain) NSString* packageId;
@property (readonly, retain) NSString* appVersion;

+ (SessionMessage_AppInfo*) defaultInstance;
- (SessionMessage_AppInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (SessionMessage_AppInfo_Builder*) builder;
+ (SessionMessage_AppInfo_Builder*) builder;
+ (SessionMessage_AppInfo_Builder*) builderWithPrototype:(SessionMessage_AppInfo*) prototype;

+ (SessionMessage_AppInfo*) parseFromData:(NSData*) data;
+ (SessionMessage_AppInfo*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (SessionMessage_AppInfo*) parseFromInputStream:(NSInputStream*) input;
+ (SessionMessage_AppInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (SessionMessage_AppInfo*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (SessionMessage_AppInfo*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface SessionMessage_AppInfo_Builder : BatPBGeneratedMessage_Builder {
@private
  SessionMessage_AppInfo* result;
}

- (SessionMessage_AppInfo*) defaultInstance;

- (SessionMessage_AppInfo_Builder*) clear;
- (SessionMessage_AppInfo_Builder*) clone;

- (SessionMessage_AppInfo*) build;
- (SessionMessage_AppInfo*) buildPartial;

- (SessionMessage_AppInfo_Builder*) mergeFrom:(SessionMessage_AppInfo*) other;
- (SessionMessage_AppInfo_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (SessionMessage_AppInfo_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (SessionMessage_AppInfo_Builder*) setName:(NSString*) value;
- (SessionMessage_AppInfo_Builder*) clearName;

- (BOOL) hasPackageId;
- (NSString*) packageId;
- (SessionMessage_AppInfo_Builder*) setPackageId:(NSString*) value;
- (SessionMessage_AppInfo_Builder*) clearPackageId;

- (BOOL) hasAppVersion;
- (NSString*) appVersion;
- (SessionMessage_AppInfo_Builder*) setAppVersion:(NSString*) value;
- (SessionMessage_AppInfo_Builder*) clearAppVersion;
@end

@interface SessionMessage_DeviceInfo : BatPBGeneratedMessage {
@private
  BOOL hasRooted_:1;
  BOOL hasDeviceName_:1;
  BOOL hasOsName_:1;
  BOOL hasOsVersion_:1;
  BOOL hasScreenSize_:1;
  BOOL hasDeviceId_:1;
  BOOL hasDeviceCode_:1;
  BOOL rooted_:1;
  NSString* deviceName;
  NSString* osName;
  NSString* osVersion;
  NSString* screenSize;
  NSString* deviceId;
  NSString* deviceCode;
}
- (BOOL) hasDeviceName;
- (BOOL) hasOsName;
- (BOOL) hasOsVersion;
- (BOOL) hasScreenSize;
- (BOOL) hasDeviceId;
- (BOOL) hasRooted;
- (BOOL) hasDeviceCode;
@property (readonly, retain) NSString* deviceName;
@property (readonly, retain) NSString* osName;
@property (readonly, retain) NSString* osVersion;
@property (readonly, retain) NSString* screenSize;
@property (readonly, retain) NSString* deviceId;
- (BOOL) rooted;
@property (readonly, retain) NSString* deviceCode;

+ (SessionMessage_DeviceInfo*) defaultInstance;
- (SessionMessage_DeviceInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (SessionMessage_DeviceInfo_Builder*) builder;
+ (SessionMessage_DeviceInfo_Builder*) builder;
+ (SessionMessage_DeviceInfo_Builder*) builderWithPrototype:(SessionMessage_DeviceInfo*) prototype;

+ (SessionMessage_DeviceInfo*) parseFromData:(NSData*) data;
+ (SessionMessage_DeviceInfo*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (SessionMessage_DeviceInfo*) parseFromInputStream:(NSInputStream*) input;
+ (SessionMessage_DeviceInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (SessionMessage_DeviceInfo*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (SessionMessage_DeviceInfo*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface SessionMessage_DeviceInfo_Builder : BatPBGeneratedMessage_Builder {
@private
  SessionMessage_DeviceInfo* result;
}

- (SessionMessage_DeviceInfo*) defaultInstance;

- (SessionMessage_DeviceInfo_Builder*) clear;
- (SessionMessage_DeviceInfo_Builder*) clone;

- (SessionMessage_DeviceInfo*) build;
- (SessionMessage_DeviceInfo*) buildPartial;

- (SessionMessage_DeviceInfo_Builder*) mergeFrom:(SessionMessage_DeviceInfo*) other;
- (SessionMessage_DeviceInfo_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (SessionMessage_DeviceInfo_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDeviceName;
- (NSString*) deviceName;
- (SessionMessage_DeviceInfo_Builder*) setDeviceName:(NSString*) value;
- (SessionMessage_DeviceInfo_Builder*) clearDeviceName;

- (BOOL) hasOsName;
- (NSString*) osName;
- (SessionMessage_DeviceInfo_Builder*) setOsName:(NSString*) value;
- (SessionMessage_DeviceInfo_Builder*) clearOsName;

- (BOOL) hasOsVersion;
- (NSString*) osVersion;
- (SessionMessage_DeviceInfo_Builder*) setOsVersion:(NSString*) value;
- (SessionMessage_DeviceInfo_Builder*) clearOsVersion;

- (BOOL) hasScreenSize;
- (NSString*) screenSize;
- (SessionMessage_DeviceInfo_Builder*) setScreenSize:(NSString*) value;
- (SessionMessage_DeviceInfo_Builder*) clearScreenSize;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (SessionMessage_DeviceInfo_Builder*) setDeviceId:(NSString*) value;
- (SessionMessage_DeviceInfo_Builder*) clearDeviceId;

- (BOOL) hasRooted;
- (BOOL) rooted;
- (SessionMessage_DeviceInfo_Builder*) setRooted:(BOOL) value;
- (SessionMessage_DeviceInfo_Builder*) clearRooted;

- (BOOL) hasDeviceCode;
- (NSString*) deviceCode;
- (SessionMessage_DeviceInfo_Builder*) setDeviceCode:(NSString*) value;
- (SessionMessage_DeviceInfo_Builder*) clearDeviceCode;
@end

@interface SessionMessage_Builder : BatPBGeneratedMessage_Builder {
@private
  SessionMessage* result;
}

- (SessionMessage*) defaultInstance;

- (SessionMessage_Builder*) clear;
- (SessionMessage_Builder*) clone;

- (SessionMessage*) build;
- (SessionMessage*) buildPartial;

- (SessionMessage_Builder*) mergeFrom:(SessionMessage*) other;
- (SessionMessage_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (SessionMessage_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAppkey;
- (NSString*) appkey;
- (SessionMessage_Builder*) setAppkey:(NSString*) value;
- (SessionMessage_Builder*) clearAppkey;

- (BOOL) hasApp;
- (SessionMessage_AppInfo*) app;
- (SessionMessage_Builder*) setApp:(SessionMessage_AppInfo*) value;
- (SessionMessage_Builder*) setAppBuilder:(SessionMessage_AppInfo_Builder*) builderForValue;
- (SessionMessage_Builder*) mergeApp:(SessionMessage_AppInfo*) value;
- (SessionMessage_Builder*) clearApp;

- (BOOL) hasDevice;
- (SessionMessage_DeviceInfo*) device;
- (SessionMessage_Builder*) setDevice:(SessionMessage_DeviceInfo*) value;
- (SessionMessage_Builder*) setDeviceBuilder:(SessionMessage_DeviceInfo_Builder*) builderForValue;
- (SessionMessage_Builder*) mergeDevice:(SessionMessage_DeviceInfo*) value;
- (SessionMessage_Builder*) clearDevice;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (SessionMessage_Builder*) setSessionId:(NSString*) value;
- (SessionMessage_Builder*) clearSessionId;

- (BOOL) hasSdkVersion;
- (NSString*) sdkVersion;
- (SessionMessage_Builder*) setSdkVersion:(NSString*) value;
- (SessionMessage_Builder*) clearSdkVersion;
@end

@interface MessageReply : BatPBGeneratedMessage {
@private
  BOOL hasRet_:1;
  BOOL hasProbability_:1;
  BOOL hasMessage_:1;
  BOOL ret_:1;
  int32_t probability;
  NSString* message;
}
- (BOOL) hasRet;
- (BOOL) hasProbability;
- (BOOL) hasMessage;
- (BOOL) ret;
@property (readonly) int32_t probability;
@property (readonly, retain) NSString* message;

+ (MessageReply*) defaultInstance;
- (MessageReply*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (MessageReply_Builder*) builder;
+ (MessageReply_Builder*) builder;
+ (MessageReply_Builder*) builderWithPrototype:(MessageReply*) prototype;

+ (MessageReply*) parseFromData:(NSData*) data;
+ (MessageReply*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (MessageReply*) parseFromInputStream:(NSInputStream*) input;
+ (MessageReply*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (MessageReply*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (MessageReply*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface MessageReply_Builder : BatPBGeneratedMessage_Builder {
@private
  MessageReply* result;
}

- (MessageReply*) defaultInstance;

- (MessageReply_Builder*) clear;
- (MessageReply_Builder*) clone;

- (MessageReply*) build;
- (MessageReply*) buildPartial;

- (MessageReply_Builder*) mergeFrom:(MessageReply*) other;
- (MessageReply_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (MessageReply_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRet;
- (BOOL) ret;
- (MessageReply_Builder*) setRet:(BOOL) value;
- (MessageReply_Builder*) clearRet;

- (BOOL) hasProbability;
- (int32_t) probability;
- (MessageReply_Builder*) setProbability:(int32_t) value;
- (MessageReply_Builder*) clearProbability;

- (BOOL) hasMessage;
- (NSString*) message;
- (MessageReply_Builder*) setMessage:(NSString*) value;
- (MessageReply_Builder*) clearMessage;
@end

@interface RecvDataReply : BatPBGeneratedMessage {
@private
  BOOL hasRecved_:1;
  BOOL hasMessage_:1;
  BOOL recved_:1;
  NSString* message;
}
- (BOOL) hasRecved;
- (BOOL) hasMessage;
- (BOOL) recved;
@property (readonly, retain) NSString* message;

+ (RecvDataReply*) defaultInstance;
- (RecvDataReply*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (RecvDataReply_Builder*) builder;
+ (RecvDataReply_Builder*) builder;
+ (RecvDataReply_Builder*) builderWithPrototype:(RecvDataReply*) prototype;

+ (RecvDataReply*) parseFromData:(NSData*) data;
+ (RecvDataReply*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (RecvDataReply*) parseFromInputStream:(NSInputStream*) input;
+ (RecvDataReply*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (RecvDataReply*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (RecvDataReply*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface RecvDataReply_Builder : BatPBGeneratedMessage_Builder {
@private
  RecvDataReply* result;
}

- (RecvDataReply*) defaultInstance;

- (RecvDataReply_Builder*) clear;
- (RecvDataReply_Builder*) clone;

- (RecvDataReply*) build;
- (RecvDataReply*) buildPartial;

- (RecvDataReply_Builder*) mergeFrom:(RecvDataReply*) other;
- (RecvDataReply_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (RecvDataReply_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRecved;
- (BOOL) recved;
- (RecvDataReply_Builder*) setRecved:(BOOL) value;
- (RecvDataReply_Builder*) clearRecved;

- (BOOL) hasMessage;
- (NSString*) message;
- (RecvDataReply_Builder*) setMessage:(NSString*) value;
- (RecvDataReply_Builder*) clearMessage;
@end

@interface AppNetWorkStatus : BatPBGeneratedMessage {
@private
  BOOL hasNetworkName_:1;
  BOOL hasCarrierName_:1;
  NSString* networkName;
  NSString* carrierName;
}
- (BOOL) hasNetworkName;
- (BOOL) hasCarrierName;
@property (readonly, retain) NSString* networkName;
@property (readonly, retain) NSString* carrierName;

+ (AppNetWorkStatus*) defaultInstance;
- (AppNetWorkStatus*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (AppNetWorkStatus_Builder*) builder;
+ (AppNetWorkStatus_Builder*) builder;
+ (AppNetWorkStatus_Builder*) builderWithPrototype:(AppNetWorkStatus*) prototype;

+ (AppNetWorkStatus*) parseFromData:(NSData*) data;
+ (AppNetWorkStatus*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (AppNetWorkStatus*) parseFromInputStream:(NSInputStream*) input;
+ (AppNetWorkStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (AppNetWorkStatus*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (AppNetWorkStatus*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface AppNetWorkStatus_Builder : BatPBGeneratedMessage_Builder {
@private
  AppNetWorkStatus* result;
}

- (AppNetWorkStatus*) defaultInstance;

- (AppNetWorkStatus_Builder*) clear;
- (AppNetWorkStatus_Builder*) clone;

- (AppNetWorkStatus*) build;
- (AppNetWorkStatus*) buildPartial;

- (AppNetWorkStatus_Builder*) mergeFrom:(AppNetWorkStatus*) other;
- (AppNetWorkStatus_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (AppNetWorkStatus_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasNetworkName;
- (NSString*) networkName;
- (AppNetWorkStatus_Builder*) setNetworkName:(NSString*) value;
- (AppNetWorkStatus_Builder*) clearNetworkName;

- (BOOL) hasCarrierName;
- (NSString*) carrierName;
- (AppNetWorkStatus_Builder*) setCarrierName:(NSString*) value;
- (AppNetWorkStatus_Builder*) clearCarrierName;
@end

@interface HttpResponse : BatPBGeneratedMessage {
@private
  BOOL hasStatusCode_:1;
  BOOL hasHeaderField_:1;
  int32_t statusCode;
  NSString* headerField;
}
- (BOOL) hasStatusCode;
- (BOOL) hasHeaderField;
@property (readonly) int32_t statusCode;
@property (readonly, retain) NSString* headerField;

+ (HttpResponse*) defaultInstance;
- (HttpResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (HttpResponse_Builder*) builder;
+ (HttpResponse_Builder*) builder;
+ (HttpResponse_Builder*) builderWithPrototype:(HttpResponse*) prototype;

+ (HttpResponse*) parseFromData:(NSData*) data;
+ (HttpResponse*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (HttpResponse*) parseFromInputStream:(NSInputStream*) input;
+ (HttpResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (HttpResponse*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (HttpResponse*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface HttpResponse_Builder : BatPBGeneratedMessage_Builder {
@private
  HttpResponse* result;
}

- (HttpResponse*) defaultInstance;

- (HttpResponse_Builder*) clear;
- (HttpResponse_Builder*) clone;

- (HttpResponse*) build;
- (HttpResponse*) buildPartial;

- (HttpResponse_Builder*) mergeFrom:(HttpResponse*) other;
- (HttpResponse_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (HttpResponse_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStatusCode;
- (int32_t) statusCode;
- (HttpResponse_Builder*) setStatusCode:(int32_t) value;
- (HttpResponse_Builder*) clearStatusCode;

- (BOOL) hasHeaderField;
- (NSString*) headerField;
- (HttpResponse_Builder*) setHeaderField:(NSString*) value;
- (HttpResponse_Builder*) clearHeaderField;
@end

@interface HttpError : BatPBGeneratedMessage {
@private
  BOOL hasErrorCode_:1;
  BOOL hasErrorMessage_:1;
  BOOL hasResponseContent_:1;
  BOOL hasHeaderField_:1;
  BOOL hasErrorType_:1;
  int32_t errorCode;
  NSString* errorMessage;
  NSString* responseContent;
  NSString* headerField;
  HttpErrorType errorType;
}
- (BOOL) hasErrorCode;
- (BOOL) hasErrorMessage;
- (BOOL) hasErrorType;
- (BOOL) hasResponseContent;
- (BOOL) hasHeaderField;
@property (readonly) int32_t errorCode;
@property (readonly, retain) NSString* errorMessage;
@property (readonly) HttpErrorType errorType;
@property (readonly, retain) NSString* responseContent;
@property (readonly, retain) NSString* headerField;

+ (HttpError*) defaultInstance;
- (HttpError*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (HttpError_Builder*) builder;
+ (HttpError_Builder*) builder;
+ (HttpError_Builder*) builderWithPrototype:(HttpError*) prototype;

+ (HttpError*) parseFromData:(NSData*) data;
+ (HttpError*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (HttpError*) parseFromInputStream:(NSInputStream*) input;
+ (HttpError*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (HttpError*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (HttpError*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface HttpError_Builder : BatPBGeneratedMessage_Builder {
@private
  HttpError* result;
}

- (HttpError*) defaultInstance;

- (HttpError_Builder*) clear;
- (HttpError_Builder*) clone;

- (HttpError*) build;
- (HttpError*) buildPartial;

- (HttpError_Builder*) mergeFrom:(HttpError*) other;
- (HttpError_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (HttpError_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasErrorCode;
- (int32_t) errorCode;
- (HttpError_Builder*) setErrorCode:(int32_t) value;
- (HttpError_Builder*) clearErrorCode;

- (BOOL) hasErrorMessage;
- (NSString*) errorMessage;
- (HttpError_Builder*) setErrorMessage:(NSString*) value;
- (HttpError_Builder*) clearErrorMessage;

- (BOOL) hasErrorType;
- (HttpErrorType) errorType;
- (HttpError_Builder*) setErrorType:(HttpErrorType) value;
- (HttpError_Builder*) clearErrorType;

- (BOOL) hasResponseContent;
- (NSString*) responseContent;
- (HttpError_Builder*) setResponseContent:(NSString*) value;
- (HttpError_Builder*) clearResponseContent;

- (BOOL) hasHeaderField;
- (NSString*) headerField;
- (HttpError_Builder*) setHeaderField:(NSString*) value;
- (HttpError_Builder*) clearHeaderField;
@end

@interface HttpData : BatPBGeneratedMessage {
@private
  BOOL hasCastTime_:1;
  BOOL hasResponseSize_:1;
  BOOL hasRequestSize_:1;
  BOOL hasUrl_:1;
  BOOL hasError_:1;
  Float64 castTime;
  int32_t responseSize;
  int32_t requestSize;
  NSString* url;
  HttpError* error;
}
- (BOOL) hasUrl;
- (BOOL) hasCastTime;
- (BOOL) hasError;
- (BOOL) hasResponseSize;
- (BOOL) hasRequestSize;
@property (readonly, retain) NSString* url;
@property (readonly) Float64 castTime;
@property (readonly, retain) HttpError* error;
@property (readonly) int32_t responseSize;
@property (readonly) int32_t requestSize;

+ (HttpData*) defaultInstance;
- (HttpData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (HttpData_Builder*) builder;
+ (HttpData_Builder*) builder;
+ (HttpData_Builder*) builderWithPrototype:(HttpData*) prototype;

+ (HttpData*) parseFromData:(NSData*) data;
+ (HttpData*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (HttpData*) parseFromInputStream:(NSInputStream*) input;
+ (HttpData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (HttpData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (HttpData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface HttpData_Builder : BatPBGeneratedMessage_Builder {
@private
  HttpData* result;
}

- (HttpData*) defaultInstance;

- (HttpData_Builder*) clear;
- (HttpData_Builder*) clone;

- (HttpData*) build;
- (HttpData*) buildPartial;

- (HttpData_Builder*) mergeFrom:(HttpData*) other;
- (HttpData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (HttpData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUrl;
- (NSString*) url;
- (HttpData_Builder*) setUrl:(NSString*) value;
- (HttpData_Builder*) clearUrl;

- (BOOL) hasCastTime;
- (Float64) castTime;
- (HttpData_Builder*) setCastTime:(Float64) value;
- (HttpData_Builder*) clearCastTime;

- (BOOL) hasError;
- (HttpError*) error;
- (HttpData_Builder*) setError:(HttpError*) value;
- (HttpData_Builder*) setErrorBuilder:(HttpError_Builder*) builderForValue;
- (HttpData_Builder*) mergeError:(HttpError*) value;
- (HttpData_Builder*) clearError;

- (BOOL) hasResponseSize;
- (int32_t) responseSize;
- (HttpData_Builder*) setResponseSize:(int32_t) value;
- (HttpData_Builder*) clearResponseSize;

- (BOOL) hasRequestSize;
- (int32_t) requestSize;
- (HttpData_Builder*) setRequestSize:(int32_t) value;
- (HttpData_Builder*) clearRequestSize;
@end

@interface SocketConnect : BatPBGeneratedMessage {
@private
  BOOL hasCastTime_:1;
  BOOL hasRemotePort_:1;
  BOOL hasErrnoCode_:1;
  BOOL hasRemoteIp_:1;
  BOOL hasErronMesage_:1;
  Float64 castTime;
  int32_t remotePort;
  int32_t errnoCode;
  NSString* remoteIp;
  NSString* erronMesage;
}
- (BOOL) hasRemoteIp;
- (BOOL) hasRemotePort;
- (BOOL) hasCastTime;
- (BOOL) hasErrnoCode;
- (BOOL) hasErronMesage;
@property (readonly, retain) NSString* remoteIp;
@property (readonly) int32_t remotePort;
@property (readonly) Float64 castTime;
@property (readonly) int32_t errnoCode;
@property (readonly, retain) NSString* erronMesage;

+ (SocketConnect*) defaultInstance;
- (SocketConnect*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (SocketConnect_Builder*) builder;
+ (SocketConnect_Builder*) builder;
+ (SocketConnect_Builder*) builderWithPrototype:(SocketConnect*) prototype;

+ (SocketConnect*) parseFromData:(NSData*) data;
+ (SocketConnect*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (SocketConnect*) parseFromInputStream:(NSInputStream*) input;
+ (SocketConnect*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (SocketConnect*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (SocketConnect*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface SocketConnect_Builder : BatPBGeneratedMessage_Builder {
@private
  SocketConnect* result;
}

- (SocketConnect*) defaultInstance;

- (SocketConnect_Builder*) clear;
- (SocketConnect_Builder*) clone;

- (SocketConnect*) build;
- (SocketConnect*) buildPartial;

- (SocketConnect_Builder*) mergeFrom:(SocketConnect*) other;
- (SocketConnect_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (SocketConnect_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRemoteIp;
- (NSString*) remoteIp;
- (SocketConnect_Builder*) setRemoteIp:(NSString*) value;
- (SocketConnect_Builder*) clearRemoteIp;

- (BOOL) hasRemotePort;
- (int32_t) remotePort;
- (SocketConnect_Builder*) setRemotePort:(int32_t) value;
- (SocketConnect_Builder*) clearRemotePort;

- (BOOL) hasCastTime;
- (Float64) castTime;
- (SocketConnect_Builder*) setCastTime:(Float64) value;
- (SocketConnect_Builder*) clearCastTime;

- (BOOL) hasErrnoCode;
- (int32_t) errnoCode;
- (SocketConnect_Builder*) setErrnoCode:(int32_t) value;
- (SocketConnect_Builder*) clearErrnoCode;

- (BOOL) hasErronMesage;
- (NSString*) erronMesage;
- (SocketConnect_Builder*) setErronMesage:(NSString*) value;
- (SocketConnect_Builder*) clearErronMesage;
@end

@interface SocketSendRecvData : BatPBGeneratedMessage {
@private
  BOOL hasCastTime_:1;
  BOOL hasRemotePort_:1;
  BOOL hasErrnoCode_:1;
  BOOL hasDataSize_:1;
  BOOL hasRemoteIp_:1;
  BOOL hasErronMesage_:1;
  BOOL hasMethodName_:1;
  Float64 castTime;
  int32_t remotePort;
  int32_t errnoCode;
  int32_t dataSize;
  NSString* remoteIp;
  NSString* erronMesage;
  NSString* methodName;
}
- (BOOL) hasRemoteIp;
- (BOOL) hasRemotePort;
- (BOOL) hasCastTime;
- (BOOL) hasErrnoCode;
- (BOOL) hasErronMesage;
- (BOOL) hasMethodName;
- (BOOL) hasDataSize;
@property (readonly, retain) NSString* remoteIp;
@property (readonly) int32_t remotePort;
@property (readonly) Float64 castTime;
@property (readonly) int32_t errnoCode;
@property (readonly, retain) NSString* erronMesage;
@property (readonly, retain) NSString* methodName;
@property (readonly) int32_t dataSize;

+ (SocketSendRecvData*) defaultInstance;
- (SocketSendRecvData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (SocketSendRecvData_Builder*) builder;
+ (SocketSendRecvData_Builder*) builder;
+ (SocketSendRecvData_Builder*) builderWithPrototype:(SocketSendRecvData*) prototype;

+ (SocketSendRecvData*) parseFromData:(NSData*) data;
+ (SocketSendRecvData*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (SocketSendRecvData*) parseFromInputStream:(NSInputStream*) input;
+ (SocketSendRecvData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (SocketSendRecvData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (SocketSendRecvData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface SocketSendRecvData_Builder : BatPBGeneratedMessage_Builder {
@private
  SocketSendRecvData* result;
}

- (SocketSendRecvData*) defaultInstance;

- (SocketSendRecvData_Builder*) clear;
- (SocketSendRecvData_Builder*) clone;

- (SocketSendRecvData*) build;
- (SocketSendRecvData*) buildPartial;

- (SocketSendRecvData_Builder*) mergeFrom:(SocketSendRecvData*) other;
- (SocketSendRecvData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (SocketSendRecvData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRemoteIp;
- (NSString*) remoteIp;
- (SocketSendRecvData_Builder*) setRemoteIp:(NSString*) value;
- (SocketSendRecvData_Builder*) clearRemoteIp;

- (BOOL) hasRemotePort;
- (int32_t) remotePort;
- (SocketSendRecvData_Builder*) setRemotePort:(int32_t) value;
- (SocketSendRecvData_Builder*) clearRemotePort;

- (BOOL) hasCastTime;
- (Float64) castTime;
- (SocketSendRecvData_Builder*) setCastTime:(Float64) value;
- (SocketSendRecvData_Builder*) clearCastTime;

- (BOOL) hasErrnoCode;
- (int32_t) errnoCode;
- (SocketSendRecvData_Builder*) setErrnoCode:(int32_t) value;
- (SocketSendRecvData_Builder*) clearErrnoCode;

- (BOOL) hasErronMesage;
- (NSString*) erronMesage;
- (SocketSendRecvData_Builder*) setErronMesage:(NSString*) value;
- (SocketSendRecvData_Builder*) clearErronMesage;

- (BOOL) hasMethodName;
- (NSString*) methodName;
- (SocketSendRecvData_Builder*) setMethodName:(NSString*) value;
- (SocketSendRecvData_Builder*) clearMethodName;

- (BOOL) hasDataSize;
- (int32_t) dataSize;
- (SocketSendRecvData_Builder*) setDataSize:(int32_t) value;
- (SocketSendRecvData_Builder*) clearDataSize;
@end

@interface MethodData : BatPBGeneratedMessage {
@private
  BOOL hasIsMainThread_:1;
  BOOL hasCastTime_:1;
  BOOL hasMethodName_:1;
  BOOL hasClassName_:1;
  BOOL hasParams_:1;
  BOOL isMainThread_:1;
  Float64 castTime;
  NSString* methodName;
  NSString* className;
  NSString* params;
  NSMutableArray* mutableMetricDatasList;
}
- (BOOL) hasMethodName;
- (BOOL) hasClassName;
- (BOOL) hasCastTime;
- (BOOL) hasIsMainThread;
- (BOOL) hasParams;
@property (readonly, retain) NSString* methodName;
@property (readonly, retain) NSString* className;
@property (readonly) Float64 castTime;
- (BOOL) isMainThread;
@property (readonly, retain) NSString* params;
- (NSArray*) metricDatasList;
- (MetricData*) metricDatasAtIndex:(int32_t) index;

+ (MethodData*) defaultInstance;
- (MethodData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (MethodData_Builder*) builder;
+ (MethodData_Builder*) builder;
+ (MethodData_Builder*) builderWithPrototype:(MethodData*) prototype;

+ (MethodData*) parseFromData:(NSData*) data;
+ (MethodData*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (MethodData*) parseFromInputStream:(NSInputStream*) input;
+ (MethodData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (MethodData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (MethodData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface MethodData_Builder : BatPBGeneratedMessage_Builder {
@private
  MethodData* result;
}

- (MethodData*) defaultInstance;

- (MethodData_Builder*) clear;
- (MethodData_Builder*) clone;

- (MethodData*) build;
- (MethodData*) buildPartial;

- (MethodData_Builder*) mergeFrom:(MethodData*) other;
- (MethodData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (MethodData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMethodName;
- (NSString*) methodName;
- (MethodData_Builder*) setMethodName:(NSString*) value;
- (MethodData_Builder*) clearMethodName;

- (BOOL) hasClassName;
- (NSString*) className;
- (MethodData_Builder*) setClassName:(NSString*) value;
- (MethodData_Builder*) clearClassName;

- (BOOL) hasCastTime;
- (Float64) castTime;
- (MethodData_Builder*) setCastTime:(Float64) value;
- (MethodData_Builder*) clearCastTime;

- (BOOL) hasIsMainThread;
- (BOOL) isMainThread;
- (MethodData_Builder*) setIsMainThread:(BOOL) value;
- (MethodData_Builder*) clearIsMainThread;

- (BOOL) hasParams;
- (NSString*) params;
- (MethodData_Builder*) setParams:(NSString*) value;
- (MethodData_Builder*) clearParams;

- (NSArray*) metricDatasList;
- (MetricData*) metricDatasAtIndex:(int32_t) index;
- (MethodData_Builder*) replaceMetricDatasAtIndex:(int32_t) index with:(MetricData*) value;
- (MethodData_Builder*) addMetricDatas:(MetricData*) value;
- (MethodData_Builder*) addAllMetricDatas:(NSArray*) values;
- (MethodData_Builder*) clearMetricDatasList;
@end

@interface WebViewData : BatPBGeneratedMessage {
@private
  BOOL hasCastTime_:1;
  BOOL hasErrnoCode_:1;
  BOOL hasUrl_:1;
  BOOL hasWebviewName_:1;
  BOOL hasErronMesage_:1;
  Float64 castTime;
  int32_t errnoCode;
  NSString* url;
  NSString* webviewName;
  NSString* erronMesage;
}
- (BOOL) hasUrl;
- (BOOL) hasCastTime;
- (BOOL) hasWebviewName;
- (BOOL) hasErrnoCode;
- (BOOL) hasErronMesage;
@property (readonly, retain) NSString* url;
@property (readonly) Float64 castTime;
@property (readonly, retain) NSString* webviewName;
@property (readonly) int32_t errnoCode;
@property (readonly, retain) NSString* erronMesage;

+ (WebViewData*) defaultInstance;
- (WebViewData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (WebViewData_Builder*) builder;
+ (WebViewData_Builder*) builder;
+ (WebViewData_Builder*) builderWithPrototype:(WebViewData*) prototype;

+ (WebViewData*) parseFromData:(NSData*) data;
+ (WebViewData*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (WebViewData*) parseFromInputStream:(NSInputStream*) input;
+ (WebViewData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (WebViewData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (WebViewData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface WebViewData_Builder : BatPBGeneratedMessage_Builder {
@private
  WebViewData* result;
}

- (WebViewData*) defaultInstance;

- (WebViewData_Builder*) clear;
- (WebViewData_Builder*) clone;

- (WebViewData*) build;
- (WebViewData*) buildPartial;

- (WebViewData_Builder*) mergeFrom:(WebViewData*) other;
- (WebViewData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (WebViewData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUrl;
- (NSString*) url;
- (WebViewData_Builder*) setUrl:(NSString*) value;
- (WebViewData_Builder*) clearUrl;

- (BOOL) hasCastTime;
- (Float64) castTime;
- (WebViewData_Builder*) setCastTime:(Float64) value;
- (WebViewData_Builder*) clearCastTime;

- (BOOL) hasWebviewName;
- (NSString*) webviewName;
- (WebViewData_Builder*) setWebviewName:(NSString*) value;
- (WebViewData_Builder*) clearWebviewName;

- (BOOL) hasErrnoCode;
- (int32_t) errnoCode;
- (WebViewData_Builder*) setErrnoCode:(int32_t) value;
- (WebViewData_Builder*) clearErrnoCode;

- (BOOL) hasErronMesage;
- (NSString*) erronMesage;
- (WebViewData_Builder*) setErronMesage:(NSString*) value;
- (WebViewData_Builder*) clearErronMesage;
@end

@interface MemoryWaringData : BatPBGeneratedMessage {
@private
  BOOL hasUsedMemory_:1;
  Float64 usedMemory;
}
- (BOOL) hasUsedMemory;
@property (readonly) Float64 usedMemory;

+ (MemoryWaringData*) defaultInstance;
- (MemoryWaringData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (MemoryWaringData_Builder*) builder;
+ (MemoryWaringData_Builder*) builder;
+ (MemoryWaringData_Builder*) builderWithPrototype:(MemoryWaringData*) prototype;

+ (MemoryWaringData*) parseFromData:(NSData*) data;
+ (MemoryWaringData*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (MemoryWaringData*) parseFromInputStream:(NSInputStream*) input;
+ (MemoryWaringData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (MemoryWaringData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (MemoryWaringData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface MemoryWaringData_Builder : BatPBGeneratedMessage_Builder {
@private
  MemoryWaringData* result;
}

- (MemoryWaringData*) defaultInstance;

- (MemoryWaringData_Builder*) clear;
- (MemoryWaringData_Builder*) clone;

- (MemoryWaringData*) build;
- (MemoryWaringData*) buildPartial;

- (MemoryWaringData_Builder*) mergeFrom:(MemoryWaringData*) other;
- (MemoryWaringData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (MemoryWaringData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUsedMemory;
- (Float64) usedMemory;
- (MemoryWaringData_Builder*) setUsedMemory:(Float64) value;
- (MemoryWaringData_Builder*) clearUsedMemory;
@end

@interface ThreadANR : BatPBGeneratedMessage {
@private
  BOOL hasStartAnr_:1;
  BOOL hasTheadId_:1;
  BOOL hasDurationAnr_:1;
  BOOL hasThreadDump_:1;
  int64_t startAnr;
  int32_t theadId;
  int32_t durationAnr;
  NSString* threadDump;
}
- (BOOL) hasTheadId;
- (BOOL) hasStartAnr;
- (BOOL) hasDurationAnr;
- (BOOL) hasThreadDump;
@property (readonly) int32_t theadId;
@property (readonly) int64_t startAnr;
@property (readonly) int32_t durationAnr;
@property (readonly, retain) NSString* threadDump;

+ (ThreadANR*) defaultInstance;
- (ThreadANR*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (ThreadANR_Builder*) builder;
+ (ThreadANR_Builder*) builder;
+ (ThreadANR_Builder*) builderWithPrototype:(ThreadANR*) prototype;

+ (ThreadANR*) parseFromData:(NSData*) data;
+ (ThreadANR*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (ThreadANR*) parseFromInputStream:(NSInputStream*) input;
+ (ThreadANR*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (ThreadANR*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (ThreadANR*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface ThreadANR_Builder : BatPBGeneratedMessage_Builder {
@private
  ThreadANR* result;
}

- (ThreadANR*) defaultInstance;

- (ThreadANR_Builder*) clear;
- (ThreadANR_Builder*) clone;

- (ThreadANR*) build;
- (ThreadANR*) buildPartial;

- (ThreadANR_Builder*) mergeFrom:(ThreadANR*) other;
- (ThreadANR_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (ThreadANR_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTheadId;
- (int32_t) theadId;
- (ThreadANR_Builder*) setTheadId:(int32_t) value;
- (ThreadANR_Builder*) clearTheadId;

- (BOOL) hasStartAnr;
- (int64_t) startAnr;
- (ThreadANR_Builder*) setStartAnr:(int64_t) value;
- (ThreadANR_Builder*) clearStartAnr;

- (BOOL) hasDurationAnr;
- (int32_t) durationAnr;
- (ThreadANR_Builder*) setDurationAnr:(int32_t) value;
- (ThreadANR_Builder*) clearDurationAnr;

- (BOOL) hasThreadDump;
- (NSString*) threadDump;
- (ThreadANR_Builder*) setThreadDump:(NSString*) value;
- (ThreadANR_Builder*) clearThreadDump;
@end

@interface MetricData : BatPBGeneratedMessage {
@private
  BOOL hasFps_:1;
  BOOL hasCpu_:1;
  BOOL hasStartBattery_:1;
  BOOL hasCurrentBattery_:1;
  BOOL hasTime_:1;
  BOOL hasMetricName_:1;
  BOOL hasMemory_:1;
  BOOL hasMetricType_:1;
  Float32 fps;
  Float32 cpu;
  int32_t startBattery;
  int32_t currentBattery;
  int32_t time;
  NSString* metricName;
  MetricData_MetricMemoryData* memory;
  MetricType metricType;
}
- (BOOL) hasFps;
- (BOOL) hasCpu;
- (BOOL) hasStartBattery;
- (BOOL) hasCurrentBattery;
- (BOOL) hasMetricType;
- (BOOL) hasMemory;
- (BOOL) hasMetricName;
- (BOOL) hasTime;
@property (readonly) Float32 fps;
@property (readonly) Float32 cpu;
@property (readonly) int32_t startBattery;
@property (readonly) int32_t currentBattery;
@property (readonly) MetricType metricType;
@property (readonly, retain) MetricData_MetricMemoryData* memory;
@property (readonly, retain) NSString* metricName;
@property (readonly) int32_t time;

+ (MetricData*) defaultInstance;
- (MetricData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (MetricData_Builder*) builder;
+ (MetricData_Builder*) builder;
+ (MetricData_Builder*) builderWithPrototype:(MetricData*) prototype;

+ (MetricData*) parseFromData:(NSData*) data;
+ (MetricData*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (MetricData*) parseFromInputStream:(NSInputStream*) input;
+ (MetricData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (MetricData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (MetricData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface MetricData_MetricMemoryData : BatPBGeneratedMessage {
@private
  BOOL hasVss_:1;
  BOOL hasUss_:1;
  BOOL hasPss_:1;
  BOOL hasRss_:1;
  BOOL hasTotal_:1;
  BOOL hasFree_:1;
  Float32 vss;
  Float32 uss;
  Float32 pss;
  Float32 rss;
  Float32 total;
  Float32 free;
}
- (BOOL) hasVss;
- (BOOL) hasUss;
- (BOOL) hasPss;
- (BOOL) hasRss;
- (BOOL) hasTotal;
- (BOOL) hasFree;
@property (readonly) Float32 vss;
@property (readonly) Float32 uss;
@property (readonly) Float32 pss;
@property (readonly) Float32 rss;
@property (readonly) Float32 total;
@property (readonly) Float32 free;

+ (MetricData_MetricMemoryData*) defaultInstance;
- (MetricData_MetricMemoryData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (MetricData_MetricMemoryData_Builder*) builder;
+ (MetricData_MetricMemoryData_Builder*) builder;
+ (MetricData_MetricMemoryData_Builder*) builderWithPrototype:(MetricData_MetricMemoryData*) prototype;

+ (MetricData_MetricMemoryData*) parseFromData:(NSData*) data;
+ (MetricData_MetricMemoryData*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (MetricData_MetricMemoryData*) parseFromInputStream:(NSInputStream*) input;
+ (MetricData_MetricMemoryData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (MetricData_MetricMemoryData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (MetricData_MetricMemoryData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface MetricData_MetricMemoryData_Builder : BatPBGeneratedMessage_Builder {
@private
  MetricData_MetricMemoryData* result;
}

- (MetricData_MetricMemoryData*) defaultInstance;

- (MetricData_MetricMemoryData_Builder*) clear;
- (MetricData_MetricMemoryData_Builder*) clone;

- (MetricData_MetricMemoryData*) build;
- (MetricData_MetricMemoryData*) buildPartial;

- (MetricData_MetricMemoryData_Builder*) mergeFrom:(MetricData_MetricMemoryData*) other;
- (MetricData_MetricMemoryData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (MetricData_MetricMemoryData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVss;
- (Float32) vss;
- (MetricData_MetricMemoryData_Builder*) setVss:(Float32) value;
- (MetricData_MetricMemoryData_Builder*) clearVss;

- (BOOL) hasUss;
- (Float32) uss;
- (MetricData_MetricMemoryData_Builder*) setUss:(Float32) value;
- (MetricData_MetricMemoryData_Builder*) clearUss;

- (BOOL) hasPss;
- (Float32) pss;
- (MetricData_MetricMemoryData_Builder*) setPss:(Float32) value;
- (MetricData_MetricMemoryData_Builder*) clearPss;

- (BOOL) hasRss;
- (Float32) rss;
- (MetricData_MetricMemoryData_Builder*) setRss:(Float32) value;
- (MetricData_MetricMemoryData_Builder*) clearRss;

- (BOOL) hasTotal;
- (Float32) total;
- (MetricData_MetricMemoryData_Builder*) setTotal:(Float32) value;
- (MetricData_MetricMemoryData_Builder*) clearTotal;

- (BOOL) hasFree;
- (Float32) free;
- (MetricData_MetricMemoryData_Builder*) setFree:(Float32) value;
- (MetricData_MetricMemoryData_Builder*) clearFree;
@end

@interface MetricData_Builder : BatPBGeneratedMessage_Builder {
@private
  MetricData* result;
}

- (MetricData*) defaultInstance;

- (MetricData_Builder*) clear;
- (MetricData_Builder*) clone;

- (MetricData*) build;
- (MetricData*) buildPartial;

- (MetricData_Builder*) mergeFrom:(MetricData*) other;
- (MetricData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (MetricData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFps;
- (Float32) fps;
- (MetricData_Builder*) setFps:(Float32) value;
- (MetricData_Builder*) clearFps;

- (BOOL) hasCpu;
- (Float32) cpu;
- (MetricData_Builder*) setCpu:(Float32) value;
- (MetricData_Builder*) clearCpu;

- (BOOL) hasStartBattery;
- (int32_t) startBattery;
- (MetricData_Builder*) setStartBattery:(int32_t) value;
- (MetricData_Builder*) clearStartBattery;

- (BOOL) hasCurrentBattery;
- (int32_t) currentBattery;
- (MetricData_Builder*) setCurrentBattery:(int32_t) value;
- (MetricData_Builder*) clearCurrentBattery;

- (BOOL) hasMetricType;
- (MetricType) metricType;
- (MetricData_Builder*) setMetricType:(MetricType) value;
- (MetricData_Builder*) clearMetricType;

- (BOOL) hasMemory;
- (MetricData_MetricMemoryData*) memory;
- (MetricData_Builder*) setMemory:(MetricData_MetricMemoryData*) value;
- (MetricData_Builder*) setMemoryBuilder:(MetricData_MetricMemoryData_Builder*) builderForValue;
- (MetricData_Builder*) mergeMemory:(MetricData_MetricMemoryData*) value;
- (MetricData_Builder*) clearMemory;

- (BOOL) hasMetricName;
- (NSString*) metricName;
- (MetricData_Builder*) setMetricName:(NSString*) value;
- (MetricData_Builder*) clearMetricName;

- (BOOL) hasTime;
- (int32_t) time;
- (MetricData_Builder*) setTime:(int32_t) value;
- (MetricData_Builder*) clearTime;
@end

@interface BatteryData : BatPBGeneratedMessage {
@private
  BOOL hasStartBattery_:1;
  int32_t startBattery;
  NSMutableArray* mutableBatterysList;
}
- (BOOL) hasStartBattery;
@property (readonly) int32_t startBattery;
- (NSArray*) batterysList;
- (BatteryData_BatteryItemData*) batterysAtIndex:(int32_t) index;

+ (BatteryData*) defaultInstance;
- (BatteryData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (BatteryData_Builder*) builder;
+ (BatteryData_Builder*) builder;
+ (BatteryData_Builder*) builderWithPrototype:(BatteryData*) prototype;

+ (BatteryData*) parseFromData:(NSData*) data;
+ (BatteryData*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (BatteryData*) parseFromInputStream:(NSInputStream*) input;
+ (BatteryData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (BatteryData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (BatteryData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface BatteryData_BatteryItemData : BatPBGeneratedMessage {
@private
  BOOL hasCurrentBattery_:1;
  BOOL hasTimeSection_:1;
  int32_t currentBattery;
  int32_t timeSection;
}
- (BOOL) hasCurrentBattery;
- (BOOL) hasTimeSection;
@property (readonly) int32_t currentBattery;
@property (readonly) int32_t timeSection;

+ (BatteryData_BatteryItemData*) defaultInstance;
- (BatteryData_BatteryItemData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (BatteryData_BatteryItemData_Builder*) builder;
+ (BatteryData_BatteryItemData_Builder*) builder;
+ (BatteryData_BatteryItemData_Builder*) builderWithPrototype:(BatteryData_BatteryItemData*) prototype;

+ (BatteryData_BatteryItemData*) parseFromData:(NSData*) data;
+ (BatteryData_BatteryItemData*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (BatteryData_BatteryItemData*) parseFromInputStream:(NSInputStream*) input;
+ (BatteryData_BatteryItemData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (BatteryData_BatteryItemData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (BatteryData_BatteryItemData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface BatteryData_BatteryItemData_Builder : BatPBGeneratedMessage_Builder {
@private
  BatteryData_BatteryItemData* result;
}

- (BatteryData_BatteryItemData*) defaultInstance;

- (BatteryData_BatteryItemData_Builder*) clear;
- (BatteryData_BatteryItemData_Builder*) clone;

- (BatteryData_BatteryItemData*) build;
- (BatteryData_BatteryItemData*) buildPartial;

- (BatteryData_BatteryItemData_Builder*) mergeFrom:(BatteryData_BatteryItemData*) other;
- (BatteryData_BatteryItemData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (BatteryData_BatteryItemData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCurrentBattery;
- (int32_t) currentBattery;
- (BatteryData_BatteryItemData_Builder*) setCurrentBattery:(int32_t) value;
- (BatteryData_BatteryItemData_Builder*) clearCurrentBattery;

- (BOOL) hasTimeSection;
- (int32_t) timeSection;
- (BatteryData_BatteryItemData_Builder*) setTimeSection:(int32_t) value;
- (BatteryData_BatteryItemData_Builder*) clearTimeSection;
@end

@interface BatteryData_Builder : BatPBGeneratedMessage_Builder {
@private
  BatteryData* result;
}

- (BatteryData*) defaultInstance;

- (BatteryData_Builder*) clear;
- (BatteryData_Builder*) clone;

- (BatteryData*) build;
- (BatteryData*) buildPartial;

- (BatteryData_Builder*) mergeFrom:(BatteryData*) other;
- (BatteryData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (BatteryData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStartBattery;
- (int32_t) startBattery;
- (BatteryData_Builder*) setStartBattery:(int32_t) value;
- (BatteryData_Builder*) clearStartBattery;

- (NSArray*) batterysList;
- (BatteryData_BatteryItemData*) batterysAtIndex:(int32_t) index;
- (BatteryData_Builder*) replaceBatterysAtIndex:(int32_t) index with:(BatteryData_BatteryItemData*) value;
- (BatteryData_Builder*) addBatterys:(BatteryData_BatteryItemData*) value;
- (BatteryData_Builder*) addAllBatterys:(NSArray*) values;
- (BatteryData_Builder*) clearBatterysList;
@end

@interface FpsData : BatPBGeneratedMessage {
@private
  BOOL hasFps_:1;
  BOOL hasTimeSection_:1;
  BOOL hasNote_:1;
  BOOL hasSnapShot_:1;
  int32_t fps;
  int32_t timeSection;
  NSString* note;
  NSData* snapShot;
}
- (BOOL) hasFps;
- (BOOL) hasTimeSection;
- (BOOL) hasNote;
- (BOOL) hasSnapShot;
@property (readonly) int32_t fps;
@property (readonly) int32_t timeSection;
@property (readonly, retain) NSString* note;
@property (readonly, retain) NSData* snapShot;

+ (FpsData*) defaultInstance;
- (FpsData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output;
- (FpsData_Builder*) builder;
+ (FpsData_Builder*) builder;
+ (FpsData_Builder*) builderWithPrototype:(FpsData*) prototype;

+ (FpsData*) parseFromData:(NSData*) data;
+ (FpsData*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (FpsData*) parseFromInputStream:(NSInputStream*) input;
+ (FpsData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
+ (FpsData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input;
+ (FpsData*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;
@end

@interface FpsData_Builder : BatPBGeneratedMessage_Builder {
@private
  FpsData* result;
}

- (FpsData*) defaultInstance;

- (FpsData_Builder*) clear;
- (FpsData_Builder*) clone;

- (FpsData*) build;
- (FpsData*) buildPartial;

- (FpsData_Builder*) mergeFrom:(FpsData*) other;
- (FpsData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input;
- (FpsData_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFps;
- (int32_t) fps;
- (FpsData_Builder*) setFps:(int32_t) value;
- (FpsData_Builder*) clearFps;

- (BOOL) hasTimeSection;
- (int32_t) timeSection;
- (FpsData_Builder*) setTimeSection:(int32_t) value;
- (FpsData_Builder*) clearTimeSection;

- (BOOL) hasNote;
- (NSString*) note;
- (FpsData_Builder*) setNote:(NSString*) value;
- (FpsData_Builder*) clearNote;

- (BOOL) hasSnapShot;
- (NSData*) snapShot;
- (FpsData_Builder*) setSnapShot:(NSData*) value;
- (FpsData_Builder*) clearSnapShot;
@end

