// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Descriptor.pb.h"

@implementation BatPBDescriptorRoot
static BatPBExtensionRegistry* extensionRegistry = nil;
+ (BatPBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [BatPBDescriptorRoot class]) {
    BatPBMutableExtensionRegistry* registry = [BatPBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(BatPBMutableExtensionRegistry*) registry {
}
@end

@interface BatPBFileDescriptorSet ()
@property (retain) NSMutableArray* mutableFileList;
@end

@implementation BatPBFileDescriptorSet

@synthesize mutableFileList;
- (void) dealloc {
  self.mutableFileList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static BatPBFileDescriptorSet* defaultPBFileDescriptorSetInstance = nil;
+ (void) initialize {
  if (self == [BatPBFileDescriptorSet class]) {
    defaultPBFileDescriptorSetInstance = [[BatPBFileDescriptorSet alloc] init];
  }
}
+ (BatPBFileDescriptorSet*) defaultInstance {
  return defaultPBFileDescriptorSetInstance;
}
- (BatPBFileDescriptorSet*) defaultInstance {
  return defaultPBFileDescriptorSetInstance;
}
- (NSArray*) fileList {
  return mutableFileList;
}
- (BatPBFileDescriptorProto*) fileAtIndex:(int32_t) index {
  id value = [mutableFileList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBFileDescriptorProto* element in self.fileList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  for (BatPBFileDescriptorProto* element in self.fileList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (BatPBFileDescriptorProto* element in self.fileList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBFileDescriptorSet*) parseFromData:(NSData*) data {
  return (BatPBFileDescriptorSet*)[[[BatPBFileDescriptorSet builder] mergeFromData:data] build];
}
+ (BatPBFileDescriptorSet*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFileDescriptorSet*)[[[BatPBFileDescriptorSet builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBFileDescriptorSet*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBFileDescriptorSet*)[[[BatPBFileDescriptorSet builder] mergeFromInputStream:input] build];
}
+ (BatPBFileDescriptorSet*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFileDescriptorSet*)[[[BatPBFileDescriptorSet builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBFileDescriptorSet*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBFileDescriptorSet*)[[[BatPBFileDescriptorSet builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBFileDescriptorSet*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFileDescriptorSet*)[[[BatPBFileDescriptorSet builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBFileDescriptorSet_Builder*) builder {
  return [[[BatPBFileDescriptorSet_Builder alloc] init] autorelease];
}
+ (BatPBFileDescriptorSet_Builder*) builderWithPrototype:(BatPBFileDescriptorSet*) prototype {
  return [[BatPBFileDescriptorSet builder] mergeFrom:prototype];
}
- (BatPBFileDescriptorSet_Builder*) builder {
  return [BatPBFileDescriptorSet builder];
}
@end

@interface BatPBFileDescriptorSet_Builder()
@property (retain) BatPBFileDescriptorSet* result;
@end

@implementation BatPBFileDescriptorSet_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBFileDescriptorSet alloc] init] autorelease];
  }
  return self;
}
- (BatPBGeneratedMessage*) internalGetResult {
  return result;
}
- (BatPBFileDescriptorSet_Builder*) clear {
  self.result = [[[BatPBFileDescriptorSet alloc] init] autorelease];
  return self;
}
- (BatPBFileDescriptorSet_Builder*) clone {
  return [BatPBFileDescriptorSet builderWithPrototype:result];
}
- (BatPBFileDescriptorSet*) defaultInstance {
  return [BatPBFileDescriptorSet defaultInstance];
}
- (BatPBFileDescriptorSet*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBFileDescriptorSet*) buildPartial {
  BatPBFileDescriptorSet* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBFileDescriptorSet_Builder*) mergeFrom:(BatPBFileDescriptorSet*) other {
  if (other == [BatPBFileDescriptorSet defaultInstance]) {
    return self;
  }
  if (other.mutableFileList.count > 0) {
    if (result.mutableFileList == nil) {
      result.mutableFileList = [NSMutableArray array];
    }
    [result.mutableFileList addObjectsFromArray:other.mutableFileList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBFileDescriptorSet_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBFileDescriptorSet_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BatPBFileDescriptorProto_Builder* subBuilder = [BatPBFileDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFile:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) fileList {
  if (result.mutableFileList == nil) { return [NSArray array]; }
  return result.mutableFileList;
}
- (BatPBFileDescriptorProto*) fileAtIndex:(int32_t) index {
  return [result fileAtIndex:index];
}
- (BatPBFileDescriptorSet_Builder*) replaceFileAtIndex:(int32_t) index with:(BatPBFileDescriptorProto*) value {
  [result.mutableFileList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBFileDescriptorSet_Builder*) addAllFile:(NSArray*) values {
  if (result.mutableFileList == nil) {
    result.mutableFileList = [NSMutableArray array];
  }
  [result.mutableFileList addObjectsFromArray:values];
  return self;
}
- (BatPBFileDescriptorSet_Builder*) clearFileList {
  result.mutableFileList = nil;
  return self;
}
- (BatPBFileDescriptorSet_Builder*) addFile:(BatPBFileDescriptorProto*) value {
  if (result.mutableFileList == nil) {
    result.mutableFileList = [NSMutableArray array];
  }
  [result.mutableFileList addObject:value];
  return self;
}
@end

@interface BatPBFileDescriptorProto ()
@property (retain) NSString* name;
@property (retain) NSString* package;
@property (retain) NSMutableArray* mutableDependencyList;
@property (retain) NSMutableArray* mutableMessageTypeList;
@property (retain) NSMutableArray* mutableEnumTypeList;
@property (retain) NSMutableArray* mutableServiceList;
@property (retain) NSMutableArray* mutableExtensionList;
@property (retain) BatPBFileOptions* options;
@end

@implementation BatPBFileDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasPackage {
  return !!hasPackage_;
}
- (void) setHasPackage:(BOOL) value {
  hasPackage_ = !!value;
}
@synthesize package;
@synthesize mutableDependencyList;
@synthesize mutableMessageTypeList;
@synthesize mutableEnumTypeList;
@synthesize mutableServiceList;
@synthesize mutableExtensionList;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.package = nil;
  self.mutableDependencyList = nil;
  self.mutableMessageTypeList = nil;
  self.mutableEnumTypeList = nil;
  self.mutableServiceList = nil;
  self.mutableExtensionList = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.package = @"";
    self.options = [BatPBFileOptions defaultInstance];
  }
  return self;
}
static BatPBFileDescriptorProto* defaultPBFileDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [BatPBFileDescriptorProto class]) {
    defaultPBFileDescriptorProtoInstance = [[BatPBFileDescriptorProto alloc] init];
  }
}
+ (BatPBFileDescriptorProto*) defaultInstance {
  return defaultPBFileDescriptorProtoInstance;
}
- (BatPBFileDescriptorProto*) defaultInstance {
  return defaultPBFileDescriptorProtoInstance;
}
- (NSArray*) dependencyList {
  return mutableDependencyList;
}
- (NSString*) dependencyAtIndex:(int32_t) index {
  id value = [mutableDependencyList objectAtIndex:index];
  return value;
}
- (NSArray*) messageTypeList {
  return mutableMessageTypeList;
}
- (BatPBDescriptorProto*) messageTypeAtIndex:(int32_t) index {
  id value = [mutableMessageTypeList objectAtIndex:index];
  return value;
}
- (NSArray*) enumTypeList {
  return mutableEnumTypeList;
}
- (BatPBEnumDescriptorProto*) enumTypeAtIndex:(int32_t) index {
  id value = [mutableEnumTypeList objectAtIndex:index];
  return value;
}
- (NSArray*) serviceList {
  return mutableServiceList;
}
- (BatPBServiceDescriptorProto*) serviceAtIndex:(int32_t) index {
  id value = [mutableServiceList objectAtIndex:index];
  return value;
}
- (NSArray*) extensionList {
  return mutableExtensionList;
}
- (BatPBFieldDescriptorProto*) extensionAtIndex:(int32_t) index {
  id value = [mutableExtensionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBDescriptorProto* element in self.messageTypeList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (BatPBEnumDescriptorProto* element in self.enumTypeList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (BatPBServiceDescriptorProto* element in self.serviceList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (BatPBFieldDescriptorProto* element in self.extensionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasPackage) {
    [output writeString:2 value:self.package];
  }
  for (NSString* element in self.mutableDependencyList) {
    [output writeString:3 value:element];
  }
  for (BatPBDescriptorProto* element in self.messageTypeList) {
    [output writeMessage:4 value:element];
  }
  for (BatPBEnumDescriptorProto* element in self.enumTypeList) {
    [output writeMessage:5 value:element];
  }
  for (BatPBServiceDescriptorProto* element in self.serviceList) {
    [output writeMessage:6 value:element];
  }
  for (BatPBFieldDescriptorProto* element in self.extensionList) {
    [output writeMessage:7 value:element];
  }
  if (self.hasOptions) {
    [output writeMessage:8 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasPackage) {
    size += computeStringSize(2, self.package);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableDependencyList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableDependencyList.count;
  }
  for (BatPBDescriptorProto* element in self.messageTypeList) {
    size += computeMessageSize(4, element);
  }
  for (BatPBEnumDescriptorProto* element in self.enumTypeList) {
    size += computeMessageSize(5, element);
  }
  for (BatPBServiceDescriptorProto* element in self.serviceList) {
    size += computeMessageSize(6, element);
  }
  for (BatPBFieldDescriptorProto* element in self.extensionList) {
    size += computeMessageSize(7, element);
  }
  if (self.hasOptions) {
    size += computeMessageSize(8, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBFileDescriptorProto*) parseFromData:(NSData*) data {
  return (BatPBFileDescriptorProto*)[[[BatPBFileDescriptorProto builder] mergeFromData:data] build];
}
+ (BatPBFileDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFileDescriptorProto*)[[[BatPBFileDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBFileDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBFileDescriptorProto*)[[[BatPBFileDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (BatPBFileDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFileDescriptorProto*)[[[BatPBFileDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBFileDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBFileDescriptorProto*)[[[BatPBFileDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBFileDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFileDescriptorProto*)[[[BatPBFileDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBFileDescriptorProto_Builder*) builder {
  return [[[BatPBFileDescriptorProto_Builder alloc] init] autorelease];
}
+ (BatPBFileDescriptorProto_Builder*) builderWithPrototype:(BatPBFileDescriptorProto*) prototype {
  return [[BatPBFileDescriptorProto builder] mergeFrom:prototype];
}
- (BatPBFileDescriptorProto_Builder*) builder {
  return [BatPBFileDescriptorProto builder];
}
@end

@interface BatPBFileDescriptorProto_Builder()
@property (retain) BatPBFileDescriptorProto* result;
@end

@implementation BatPBFileDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBFileDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (BatPBGeneratedMessage*) internalGetResult {
  return result;
}
- (BatPBFileDescriptorProto_Builder*) clear {
  self.result = [[[BatPBFileDescriptorProto alloc] init] autorelease];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) clone {
  return [BatPBFileDescriptorProto builderWithPrototype:result];
}
- (BatPBFileDescriptorProto*) defaultInstance {
  return [BatPBFileDescriptorProto defaultInstance];
}
- (BatPBFileDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBFileDescriptorProto*) buildPartial {
  BatPBFileDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBFileDescriptorProto_Builder*) mergeFrom:(BatPBFileDescriptorProto*) other {
  if (other == [BatPBFileDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasPackage) {
    [self setPackage:other.package];
  }
  if (other.mutableDependencyList.count > 0) {
    if (result.mutableDependencyList == nil) {
      result.mutableDependencyList = [NSMutableArray array];
    }
    [result.mutableDependencyList addObjectsFromArray:other.mutableDependencyList];
  }
  if (other.mutableMessageTypeList.count > 0) {
    if (result.mutableMessageTypeList == nil) {
      result.mutableMessageTypeList = [NSMutableArray array];
    }
    [result.mutableMessageTypeList addObjectsFromArray:other.mutableMessageTypeList];
  }
  if (other.mutableEnumTypeList.count > 0) {
    if (result.mutableEnumTypeList == nil) {
      result.mutableEnumTypeList = [NSMutableArray array];
    }
    [result.mutableEnumTypeList addObjectsFromArray:other.mutableEnumTypeList];
  }
  if (other.mutableServiceList.count > 0) {
    if (result.mutableServiceList == nil) {
      result.mutableServiceList = [NSMutableArray array];
    }
    [result.mutableServiceList addObjectsFromArray:other.mutableServiceList];
  }
  if (other.mutableExtensionList.count > 0) {
    if (result.mutableExtensionList == nil) {
      result.mutableExtensionList = [NSMutableArray array];
    }
    [result.mutableExtensionList addObjectsFromArray:other.mutableExtensionList];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBFileDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setPackage:[input readString]];
        break;
      }
      case 26: {
        [self addDependency:[input readString]];
        break;
      }
      case 34: {
        BatPBDescriptorProto_Builder* subBuilder = [BatPBDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMessageType:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        BatPBEnumDescriptorProto_Builder* subBuilder = [BatPBEnumDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addEnumType:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        BatPBServiceDescriptorProto_Builder* subBuilder = [BatPBServiceDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addService:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        BatPBFieldDescriptorProto_Builder* subBuilder = [BatPBFieldDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExtension:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        BatPBFileOptions_Builder* subBuilder = [BatPBFileOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (BatPBFileDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (BatPBFileDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasPackage {
  return result.hasPackage;
}
- (NSString*) package {
  return result.package;
}
- (BatPBFileDescriptorProto_Builder*) setPackage:(NSString*) value {
  result.hasPackage = YES;
  result.package = value;
  return self;
}
- (BatPBFileDescriptorProto_Builder*) clearPackage {
  result.hasPackage = NO;
  result.package = @"";
  return self;
}
- (NSArray*) dependencyList {
  if (result.mutableDependencyList == nil) {
    return [NSArray array];
  }
  return result.mutableDependencyList;
}
- (NSString*) dependencyAtIndex:(int32_t) index {
  return [result dependencyAtIndex:index];
}
- (BatPBFileDescriptorProto_Builder*) replaceDependencyAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableDependencyList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) addDependency:(NSString*) value {
  if (result.mutableDependencyList == nil) {
    result.mutableDependencyList = [NSMutableArray array];
  }
  [result.mutableDependencyList addObject:value];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) addAllDependency:(NSArray*) values {
  if (result.mutableDependencyList == nil) {
    result.mutableDependencyList = [NSMutableArray array];
  }
  [result.mutableDependencyList addObjectsFromArray:values];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) clearDependencyList {
  result.mutableDependencyList = nil;
  return self;
}
- (NSArray*) messageTypeList {
  if (result.mutableMessageTypeList == nil) { return [NSArray array]; }
  return result.mutableMessageTypeList;
}
- (BatPBDescriptorProto*) messageTypeAtIndex:(int32_t) index {
  return [result messageTypeAtIndex:index];
}
- (BatPBFileDescriptorProto_Builder*) replaceMessageTypeAtIndex:(int32_t) index with:(BatPBDescriptorProto*) value {
  [result.mutableMessageTypeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) addAllMessageType:(NSArray*) values {
  if (result.mutableMessageTypeList == nil) {
    result.mutableMessageTypeList = [NSMutableArray array];
  }
  [result.mutableMessageTypeList addObjectsFromArray:values];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) clearMessageTypeList {
  result.mutableMessageTypeList = nil;
  return self;
}
- (BatPBFileDescriptorProto_Builder*) addMessageType:(BatPBDescriptorProto*) value {
  if (result.mutableMessageTypeList == nil) {
    result.mutableMessageTypeList = [NSMutableArray array];
  }
  [result.mutableMessageTypeList addObject:value];
  return self;
}
- (NSArray*) enumTypeList {
  if (result.mutableEnumTypeList == nil) { return [NSArray array]; }
  return result.mutableEnumTypeList;
}
- (BatPBEnumDescriptorProto*) enumTypeAtIndex:(int32_t) index {
  return [result enumTypeAtIndex:index];
}
- (BatPBFileDescriptorProto_Builder*) replaceEnumTypeAtIndex:(int32_t) index with:(BatPBEnumDescriptorProto*) value {
  [result.mutableEnumTypeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) addAllEnumType:(NSArray*) values {
  if (result.mutableEnumTypeList == nil) {
    result.mutableEnumTypeList = [NSMutableArray array];
  }
  [result.mutableEnumTypeList addObjectsFromArray:values];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) clearEnumTypeList {
  result.mutableEnumTypeList = nil;
  return self;
}
- (BatPBFileDescriptorProto_Builder*) addEnumType:(BatPBEnumDescriptorProto*) value {
  if (result.mutableEnumTypeList == nil) {
    result.mutableEnumTypeList = [NSMutableArray array];
  }
  [result.mutableEnumTypeList addObject:value];
  return self;
}
- (NSArray*) serviceList {
  if (result.mutableServiceList == nil) { return [NSArray array]; }
  return result.mutableServiceList;
}
- (BatPBServiceDescriptorProto*) serviceAtIndex:(int32_t) index {
  return [result serviceAtIndex:index];
}
- (BatPBFileDescriptorProto_Builder*) replaceServiceAtIndex:(int32_t) index with:(BatPBServiceDescriptorProto*) value {
  [result.mutableServiceList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) addAllService:(NSArray*) values {
  if (result.mutableServiceList == nil) {
    result.mutableServiceList = [NSMutableArray array];
  }
  [result.mutableServiceList addObjectsFromArray:values];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) clearServiceList {
  result.mutableServiceList = nil;
  return self;
}
- (BatPBFileDescriptorProto_Builder*) addService:(BatPBServiceDescriptorProto*) value {
  if (result.mutableServiceList == nil) {
    result.mutableServiceList = [NSMutableArray array];
  }
  [result.mutableServiceList addObject:value];
  return self;
}
- (NSArray*) extensionList {
  if (result.mutableExtensionList == nil) { return [NSArray array]; }
  return result.mutableExtensionList;
}
- (BatPBFieldDescriptorProto*) extensionAtIndex:(int32_t) index {
  return [result extensionAtIndex:index];
}
- (BatPBFileDescriptorProto_Builder*) replaceExtensionAtIndex:(int32_t) index with:(BatPBFieldDescriptorProto*) value {
  [result.mutableExtensionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) addAllExtension:(NSArray*) values {
  if (result.mutableExtensionList == nil) {
    result.mutableExtensionList = [NSMutableArray array];
  }
  [result.mutableExtensionList addObjectsFromArray:values];
  return self;
}
- (BatPBFileDescriptorProto_Builder*) clearExtensionList {
  result.mutableExtensionList = nil;
  return self;
}
- (BatPBFileDescriptorProto_Builder*) addExtension:(BatPBFieldDescriptorProto*) value {
  if (result.mutableExtensionList == nil) {
    result.mutableExtensionList = [NSMutableArray array];
  }
  [result.mutableExtensionList addObject:value];
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (BatPBFileOptions*) options {
  return result.options;
}
- (BatPBFileDescriptorProto_Builder*) setOptions:(BatPBFileOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (BatPBFileDescriptorProto_Builder*) setOptionsBuilder:(BatPBFileOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (BatPBFileDescriptorProto_Builder*) mergeOptions:(BatPBFileOptions*) value {
  if (result.hasOptions &&
      result.options != [BatPBFileOptions defaultInstance]) {
    result.options =
      [[[BatPBFileOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (BatPBFileDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [BatPBFileOptions defaultInstance];
  return self;
}
@end

@interface BatPBDescriptorProto ()
@property (retain) NSString* name;
@property (retain) NSMutableArray* mutableFieldList;
@property (retain) NSMutableArray* mutableExtensionList;
@property (retain) NSMutableArray* mutableNestedTypeList;
@property (retain) NSMutableArray* mutableEnumTypeList;
@property (retain) NSMutableArray* mutableExtensionRangeList;
@property (retain) BatPBMessageOptions* options;
@end

@implementation BatPBDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
@synthesize mutableFieldList;
@synthesize mutableExtensionList;
@synthesize mutableNestedTypeList;
@synthesize mutableEnumTypeList;
@synthesize mutableExtensionRangeList;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.mutableFieldList = nil;
  self.mutableExtensionList = nil;
  self.mutableNestedTypeList = nil;
  self.mutableEnumTypeList = nil;
  self.mutableExtensionRangeList = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.options = [BatPBMessageOptions defaultInstance];
  }
  return self;
}
static BatPBDescriptorProto* defaultPBDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [BatPBDescriptorProto class]) {
    defaultPBDescriptorProtoInstance = [[BatPBDescriptorProto alloc] init];
  }
}
+ (BatPBDescriptorProto*) defaultInstance {
  return defaultPBDescriptorProtoInstance;
}
- (BatPBDescriptorProto*) defaultInstance {
  return defaultPBDescriptorProtoInstance;
}
- (NSArray*) fieldList {
  return mutableFieldList;
}
- (BatPBFieldDescriptorProto*) fieldAtIndex:(int32_t) index {
  id value = [mutableFieldList objectAtIndex:index];
  return value;
}
- (NSArray*) extensionList {
  return mutableExtensionList;
}
- (BatPBFieldDescriptorProto*) extensionAtIndex:(int32_t) index {
  id value = [mutableExtensionList objectAtIndex:index];
  return value;
}
- (NSArray*) nestedTypeList {
  return mutableNestedTypeList;
}
- (BatPBDescriptorProto*) nestedTypeAtIndex:(int32_t) index {
  id value = [mutableNestedTypeList objectAtIndex:index];
  return value;
}
- (NSArray*) enumTypeList {
  return mutableEnumTypeList;
}
- (BatPBEnumDescriptorProto*) enumTypeAtIndex:(int32_t) index {
  id value = [mutableEnumTypeList objectAtIndex:index];
  return value;
}
- (NSArray*) extensionRangeList {
  return mutableExtensionRangeList;
}
- (BatPBDescriptorProto_ExtensionRange*) extensionRangeAtIndex:(int32_t) index {
  id value = [mutableExtensionRangeList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBFieldDescriptorProto* element in self.fieldList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (BatPBFieldDescriptorProto* element in self.extensionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (BatPBDescriptorProto* element in self.nestedTypeList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (BatPBEnumDescriptorProto* element in self.enumTypeList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  for (BatPBFieldDescriptorProto* element in self.fieldList) {
    [output writeMessage:2 value:element];
  }
  for (BatPBDescriptorProto* element in self.nestedTypeList) {
    [output writeMessage:3 value:element];
  }
  for (BatPBEnumDescriptorProto* element in self.enumTypeList) {
    [output writeMessage:4 value:element];
  }
  for (BatPBDescriptorProto_ExtensionRange* element in self.extensionRangeList) {
    [output writeMessage:5 value:element];
  }
  for (BatPBFieldDescriptorProto* element in self.extensionList) {
    [output writeMessage:6 value:element];
  }
  if (self.hasOptions) {
    [output writeMessage:7 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  for (BatPBFieldDescriptorProto* element in self.fieldList) {
    size += computeMessageSize(2, element);
  }
  for (BatPBDescriptorProto* element in self.nestedTypeList) {
    size += computeMessageSize(3, element);
  }
  for (BatPBEnumDescriptorProto* element in self.enumTypeList) {
    size += computeMessageSize(4, element);
  }
  for (BatPBDescriptorProto_ExtensionRange* element in self.extensionRangeList) {
    size += computeMessageSize(5, element);
  }
  for (BatPBFieldDescriptorProto* element in self.extensionList) {
    size += computeMessageSize(6, element);
  }
  if (self.hasOptions) {
    size += computeMessageSize(7, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBDescriptorProto*) parseFromData:(NSData*) data {
  return (BatPBDescriptorProto*)[[[BatPBDescriptorProto builder] mergeFromData:data] build];
}
+ (BatPBDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBDescriptorProto*)[[[BatPBDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBDescriptorProto*)[[[BatPBDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (BatPBDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBDescriptorProto*)[[[BatPBDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBDescriptorProto*)[[[BatPBDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBDescriptorProto*)[[[BatPBDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBDescriptorProto_Builder*) builder {
  return [[[BatPBDescriptorProto_Builder alloc] init] autorelease];
}
+ (BatPBDescriptorProto_Builder*) builderWithPrototype:(BatPBDescriptorProto*) prototype {
  return [[BatPBDescriptorProto builder] mergeFrom:prototype];
}
- (BatPBDescriptorProto_Builder*) builder {
  return [BatPBDescriptorProto builder];
}
@end

@interface BatPBDescriptorProto_ExtensionRange ()
@property int32_t start;
@property int32_t end;
@end

@implementation BatPBDescriptorProto_ExtensionRange

- (BOOL) hasStart {
  return !!hasStart_;
}
- (void) setHasStart:(BOOL) value {
  hasStart_ = !!value;
}
@synthesize start;
- (BOOL) hasEnd {
  return !!hasEnd_;
}
- (void) setHasEnd:(BOOL) value {
  hasEnd_ = !!value;
}
@synthesize end;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.start = 0;
    self.end = 0;
  }
  return self;
}
static BatPBDescriptorProto_ExtensionRange* defaultPBDescriptorProto_ExtensionRangeInstance = nil;
+ (void) initialize {
  if (self == [BatPBDescriptorProto_ExtensionRange class]) {
    defaultPBDescriptorProto_ExtensionRangeInstance = [[BatPBDescriptorProto_ExtensionRange alloc] init];
  }
}
+ (BatPBDescriptorProto_ExtensionRange*) defaultInstance {
  return defaultPBDescriptorProto_ExtensionRangeInstance;
}
- (BatPBDescriptorProto_ExtensionRange*) defaultInstance {
  return defaultPBDescriptorProto_ExtensionRangeInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  if (self.hasStart) {
    [output writeInt32:1 value:self.start];
  }
  if (self.hasEnd) {
    [output writeInt32:2 value:self.end];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasStart) {
    size += computeInt32Size(1, self.start);
  }
  if (self.hasEnd) {
    size += computeInt32Size(2, self.end);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBDescriptorProto_ExtensionRange*) parseFromData:(NSData*) data {
  return (BatPBDescriptorProto_ExtensionRange*)[[[BatPBDescriptorProto_ExtensionRange builder] mergeFromData:data] build];
}
+ (BatPBDescriptorProto_ExtensionRange*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBDescriptorProto_ExtensionRange*)[[[BatPBDescriptorProto_ExtensionRange builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBDescriptorProto_ExtensionRange*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBDescriptorProto_ExtensionRange*)[[[BatPBDescriptorProto_ExtensionRange builder] mergeFromInputStream:input] build];
}
+ (BatPBDescriptorProto_ExtensionRange*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBDescriptorProto_ExtensionRange*)[[[BatPBDescriptorProto_ExtensionRange builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBDescriptorProto_ExtensionRange*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBDescriptorProto_ExtensionRange*)[[[BatPBDescriptorProto_ExtensionRange builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBDescriptorProto_ExtensionRange*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBDescriptorProto_ExtensionRange*)[[[BatPBDescriptorProto_ExtensionRange builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBDescriptorProto_ExtensionRange_Builder*) builder {
  return [[[BatPBDescriptorProto_ExtensionRange_Builder alloc] init] autorelease];
}
+ (BatPBDescriptorProto_ExtensionRange_Builder*) builderWithPrototype:(BatPBDescriptorProto_ExtensionRange*) prototype {
  return [[BatPBDescriptorProto_ExtensionRange builder] mergeFrom:prototype];
}
- (BatPBDescriptorProto_ExtensionRange_Builder*) builder {
  return [BatPBDescriptorProto_ExtensionRange builder];
}
@end

@interface BatPBDescriptorProto_ExtensionRange_Builder()
@property (retain) BatPBDescriptorProto_ExtensionRange* result;
@end

@implementation BatPBDescriptorProto_ExtensionRange_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBDescriptorProto_ExtensionRange alloc] init] autorelease];
  }
  return self;
}
- (BatPBGeneratedMessage*) internalGetResult {
  return result;
}
- (BatPBDescriptorProto_ExtensionRange_Builder*) clear {
  self.result = [[[BatPBDescriptorProto_ExtensionRange alloc] init] autorelease];
  return self;
}
- (BatPBDescriptorProto_ExtensionRange_Builder*) clone {
  return [BatPBDescriptorProto_ExtensionRange builderWithPrototype:result];
}
- (BatPBDescriptorProto_ExtensionRange*) defaultInstance {
  return [BatPBDescriptorProto_ExtensionRange defaultInstance];
}
- (BatPBDescriptorProto_ExtensionRange*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBDescriptorProto_ExtensionRange*) buildPartial {
  BatPBDescriptorProto_ExtensionRange* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBDescriptorProto_ExtensionRange_Builder*) mergeFrom:(BatPBDescriptorProto_ExtensionRange*) other {
  if (other == [BatPBDescriptorProto_ExtensionRange defaultInstance]) {
    return self;
  }
  if (other.hasStart) {
    [self setStart:other.start];
  }
  if (other.hasEnd) {
    [self setEnd:other.end];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBDescriptorProto_ExtensionRange_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBDescriptorProto_ExtensionRange_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStart:[input readInt32]];
        break;
      }
      case 16: {
        [self setEnd:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStart {
  return result.hasStart;
}
- (int32_t) start {
  return result.start;
}
- (BatPBDescriptorProto_ExtensionRange_Builder*) setStart:(int32_t) value {
  result.hasStart = YES;
  result.start = value;
  return self;
}
- (BatPBDescriptorProto_ExtensionRange_Builder*) clearStart {
  result.hasStart = NO;
  result.start = 0;
  return self;
}
- (BOOL) hasEnd {
  return result.hasEnd;
}
- (int32_t) end {
  return result.end;
}
- (BatPBDescriptorProto_ExtensionRange_Builder*) setEnd:(int32_t) value {
  result.hasEnd = YES;
  result.end = value;
  return self;
}
- (BatPBDescriptorProto_ExtensionRange_Builder*) clearEnd {
  result.hasEnd = NO;
  result.end = 0;
  return self;
}
@end

@interface BatPBDescriptorProto_Builder()
@property (retain) BatPBDescriptorProto* result;
@end

@implementation BatPBDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (BatPBGeneratedMessage*) internalGetResult {
  return result;
}
- (BatPBDescriptorProto_Builder*) clear {
  self.result = [[[BatPBDescriptorProto alloc] init] autorelease];
  return self;
}
- (BatPBDescriptorProto_Builder*) clone {
  return [BatPBDescriptorProto builderWithPrototype:result];
}
- (BatPBDescriptorProto*) defaultInstance {
  return [BatPBDescriptorProto defaultInstance];
}
- (BatPBDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBDescriptorProto*) buildPartial {
  BatPBDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBDescriptorProto_Builder*) mergeFrom:(BatPBDescriptorProto*) other {
  if (other == [BatPBDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.mutableFieldList.count > 0) {
    if (result.mutableFieldList == nil) {
      result.mutableFieldList = [NSMutableArray array];
    }
    [result.mutableFieldList addObjectsFromArray:other.mutableFieldList];
  }
  if (other.mutableExtensionList.count > 0) {
    if (result.mutableExtensionList == nil) {
      result.mutableExtensionList = [NSMutableArray array];
    }
    [result.mutableExtensionList addObjectsFromArray:other.mutableExtensionList];
  }
  if (other.mutableNestedTypeList.count > 0) {
    if (result.mutableNestedTypeList == nil) {
      result.mutableNestedTypeList = [NSMutableArray array];
    }
    [result.mutableNestedTypeList addObjectsFromArray:other.mutableNestedTypeList];
  }
  if (other.mutableEnumTypeList.count > 0) {
    if (result.mutableEnumTypeList == nil) {
      result.mutableEnumTypeList = [NSMutableArray array];
    }
    [result.mutableEnumTypeList addObjectsFromArray:other.mutableEnumTypeList];
  }
  if (other.mutableExtensionRangeList.count > 0) {
    if (result.mutableExtensionRangeList == nil) {
      result.mutableExtensionRangeList = [NSMutableArray array];
    }
    [result.mutableExtensionRangeList addObjectsFromArray:other.mutableExtensionRangeList];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        BatPBFieldDescriptorProto_Builder* subBuilder = [BatPBFieldDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addField:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        BatPBDescriptorProto_Builder* subBuilder = [BatPBDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNestedType:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        BatPBEnumDescriptorProto_Builder* subBuilder = [BatPBEnumDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addEnumType:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        BatPBDescriptorProto_ExtensionRange_Builder* subBuilder = [BatPBDescriptorProto_ExtensionRange builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExtensionRange:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        BatPBFieldDescriptorProto_Builder* subBuilder = [BatPBFieldDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExtension:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        BatPBMessageOptions_Builder* subBuilder = [BatPBMessageOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (BatPBDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (BatPBDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (NSArray*) fieldList {
  if (result.mutableFieldList == nil) { return [NSArray array]; }
  return result.mutableFieldList;
}
- (BatPBFieldDescriptorProto*) fieldAtIndex:(int32_t) index {
  return [result fieldAtIndex:index];
}
- (BatPBDescriptorProto_Builder*) replaceFieldAtIndex:(int32_t) index with:(BatPBFieldDescriptorProto*) value {
  [result.mutableFieldList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBDescriptorProto_Builder*) addAllField:(NSArray*) values {
  if (result.mutableFieldList == nil) {
    result.mutableFieldList = [NSMutableArray array];
  }
  [result.mutableFieldList addObjectsFromArray:values];
  return self;
}
- (BatPBDescriptorProto_Builder*) clearFieldList {
  result.mutableFieldList = nil;
  return self;
}
- (BatPBDescriptorProto_Builder*) addField:(BatPBFieldDescriptorProto*) value {
  if (result.mutableFieldList == nil) {
    result.mutableFieldList = [NSMutableArray array];
  }
  [result.mutableFieldList addObject:value];
  return self;
}
- (NSArray*) extensionList {
  if (result.mutableExtensionList == nil) { return [NSArray array]; }
  return result.mutableExtensionList;
}
- (BatPBFieldDescriptorProto*) extensionAtIndex:(int32_t) index {
  return [result extensionAtIndex:index];
}
- (BatPBDescriptorProto_Builder*) replaceExtensionAtIndex:(int32_t) index with:(BatPBFieldDescriptorProto*) value {
  [result.mutableExtensionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBDescriptorProto_Builder*) addAllExtension:(NSArray*) values {
  if (result.mutableExtensionList == nil) {
    result.mutableExtensionList = [NSMutableArray array];
  }
  [result.mutableExtensionList addObjectsFromArray:values];
  return self;
}
- (BatPBDescriptorProto_Builder*) clearExtensionList {
  result.mutableExtensionList = nil;
  return self;
}
- (BatPBDescriptorProto_Builder*) addExtension:(BatPBFieldDescriptorProto*) value {
  if (result.mutableExtensionList == nil) {
    result.mutableExtensionList = [NSMutableArray array];
  }
  [result.mutableExtensionList addObject:value];
  return self;
}
- (NSArray*) nestedTypeList {
  if (result.mutableNestedTypeList == nil) { return [NSArray array]; }
  return result.mutableNestedTypeList;
}
- (BatPBDescriptorProto*) nestedTypeAtIndex:(int32_t) index {
  return [result nestedTypeAtIndex:index];
}
- (BatPBDescriptorProto_Builder*) replaceNestedTypeAtIndex:(int32_t) index with:(BatPBDescriptorProto*) value {
  [result.mutableNestedTypeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBDescriptorProto_Builder*) addAllNestedType:(NSArray*) values {
  if (result.mutableNestedTypeList == nil) {
    result.mutableNestedTypeList = [NSMutableArray array];
  }
  [result.mutableNestedTypeList addObjectsFromArray:values];
  return self;
}
- (BatPBDescriptorProto_Builder*) clearNestedTypeList {
  result.mutableNestedTypeList = nil;
  return self;
}
- (BatPBDescriptorProto_Builder*) addNestedType:(BatPBDescriptorProto*) value {
  if (result.mutableNestedTypeList == nil) {
    result.mutableNestedTypeList = [NSMutableArray array];
  }
  [result.mutableNestedTypeList addObject:value];
  return self;
}
- (NSArray*) enumTypeList {
  if (result.mutableEnumTypeList == nil) { return [NSArray array]; }
  return result.mutableEnumTypeList;
}
- (BatPBEnumDescriptorProto*) enumTypeAtIndex:(int32_t) index {
  return [result enumTypeAtIndex:index];
}
- (BatPBDescriptorProto_Builder*) replaceEnumTypeAtIndex:(int32_t) index with:(BatPBEnumDescriptorProto*) value {
  [result.mutableEnumTypeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBDescriptorProto_Builder*) addAllEnumType:(NSArray*) values {
  if (result.mutableEnumTypeList == nil) {
    result.mutableEnumTypeList = [NSMutableArray array];
  }
  [result.mutableEnumTypeList addObjectsFromArray:values];
  return self;
}
- (BatPBDescriptorProto_Builder*) clearEnumTypeList {
  result.mutableEnumTypeList = nil;
  return self;
}
- (BatPBDescriptorProto_Builder*) addEnumType:(BatPBEnumDescriptorProto*) value {
  if (result.mutableEnumTypeList == nil) {
    result.mutableEnumTypeList = [NSMutableArray array];
  }
  [result.mutableEnumTypeList addObject:value];
  return self;
}
- (NSArray*) extensionRangeList {
  if (result.mutableExtensionRangeList == nil) { return [NSArray array]; }
  return result.mutableExtensionRangeList;
}
- (BatPBDescriptorProto_ExtensionRange*) extensionRangeAtIndex:(int32_t) index {
  return [result extensionRangeAtIndex:index];
}
- (BatPBDescriptorProto_Builder*) replaceExtensionRangeAtIndex:(int32_t) index with:(BatPBDescriptorProto_ExtensionRange*) value {
  [result.mutableExtensionRangeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBDescriptorProto_Builder*) addAllExtensionRange:(NSArray*) values {
  if (result.mutableExtensionRangeList == nil) {
    result.mutableExtensionRangeList = [NSMutableArray array];
  }
  [result.mutableExtensionRangeList addObjectsFromArray:values];
  return self;
}
- (BatPBDescriptorProto_Builder*) clearExtensionRangeList {
  result.mutableExtensionRangeList = nil;
  return self;
}
- (BatPBDescriptorProto_Builder*) addExtensionRange:(BatPBDescriptorProto_ExtensionRange*) value {
  if (result.mutableExtensionRangeList == nil) {
    result.mutableExtensionRangeList = [NSMutableArray array];
  }
  [result.mutableExtensionRangeList addObject:value];
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (BatPBMessageOptions*) options {
  return result.options;
}
- (BatPBDescriptorProto_Builder*) setOptions:(BatPBMessageOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (BatPBDescriptorProto_Builder*) setOptionsBuilder:(BatPBMessageOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (BatPBDescriptorProto_Builder*) mergeOptions:(BatPBMessageOptions*) value {
  if (result.hasOptions &&
      result.options != [BatPBMessageOptions defaultInstance]) {
    result.options =
      [[[BatPBMessageOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (BatPBDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [BatPBMessageOptions defaultInstance];
  return self;
}
@end

@interface BatPBFieldDescriptorProto ()
@property (retain) NSString* name;
@property int32_t number;
@property PBFieldDescriptorProto_Label label;
@property PBFieldDescriptorProto_Type type;
@property (retain) NSString* typeName;
@property (retain) NSString* extendee;
@property (retain) NSString* defaultValue;
@property (retain) BatPBFieldOptions* options;
@end

@implementation BatPBFieldDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasNumber {
  return !!hasNumber_;
}
- (void) setHasNumber:(BOOL) value {
  hasNumber_ = !!value;
}
@synthesize number;
- (BOOL) hasLabel {
  return !!hasLabel_;
}
- (void) setHasLabel:(BOOL) value {
  hasLabel_ = !!value;
}
@synthesize label;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasTypeName {
  return !!hasTypeName_;
}
- (void) setHasTypeName:(BOOL) value {
  hasTypeName_ = !!value;
}
@synthesize typeName;
- (BOOL) hasExtendee {
  return !!hasExtendee_;
}
- (void) setHasExtendee:(BOOL) value {
  hasExtendee_ = !!value;
}
@synthesize extendee;
- (BOOL) hasDefaultValue {
  return !!hasDefaultValue_;
}
- (void) setHasDefaultValue:(BOOL) value {
  hasDefaultValue_ = !!value;
}
@synthesize defaultValue;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.typeName = nil;
  self.extendee = nil;
  self.defaultValue = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.number = 0;
    self.label = PBFieldDescriptorProto_LabelLabelOptional;
    self.type = PBFieldDescriptorProto_TypeTypeDouble;
    self.typeName = @"";
    self.extendee = @"";
    self.defaultValue = @"";
    self.options = [BatPBFieldOptions defaultInstance];
  }
  return self;
}
static BatPBFieldDescriptorProto* defaultPBFieldDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [BatPBFieldDescriptorProto class]) {
    defaultPBFieldDescriptorProtoInstance = [[BatPBFieldDescriptorProto alloc] init];
  }
}
+ (BatPBFieldDescriptorProto*) defaultInstance {
  return defaultPBFieldDescriptorProtoInstance;
}
- (BatPBFieldDescriptorProto*) defaultInstance {
  return defaultPBFieldDescriptorProtoInstance;
}
- (BOOL) isInitialized {
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasExtendee) {
    [output writeString:2 value:self.extendee];
  }
  if (self.hasNumber) {
    [output writeInt32:3 value:self.number];
  }
  if (self.hasLabel) {
    [output writeEnum:4 value:self.label];
  }
  if (self.hasType) {
    [output writeEnum:5 value:self.type];
  }
  if (self.hasTypeName) {
    [output writeString:6 value:self.typeName];
  }
  if (self.hasDefaultValue) {
    [output writeString:7 value:self.defaultValue];
  }
  if (self.hasOptions) {
    [output writeMessage:8 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasExtendee) {
    size += computeStringSize(2, self.extendee);
  }
  if (self.hasNumber) {
    size += computeInt32Size(3, self.number);
  }
  if (self.hasLabel) {
    size += computeEnumSize(4, self.label);
  }
  if (self.hasType) {
    size += computeEnumSize(5, self.type);
  }
  if (self.hasTypeName) {
    size += computeStringSize(6, self.typeName);
  }
  if (self.hasDefaultValue) {
    size += computeStringSize(7, self.defaultValue);
  }
  if (self.hasOptions) {
    size += computeMessageSize(8, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBFieldDescriptorProto*) parseFromData:(NSData*) data {
  return (BatPBFieldDescriptorProto*)[[[BatPBFieldDescriptorProto builder] mergeFromData:data] build];
}
+ (BatPBFieldDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFieldDescriptorProto*)[[[BatPBFieldDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBFieldDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBFieldDescriptorProto*)[[[BatPBFieldDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (BatPBFieldDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFieldDescriptorProto*)[[[BatPBFieldDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBFieldDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBFieldDescriptorProto*)[[[BatPBFieldDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBFieldDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFieldDescriptorProto*)[[[BatPBFieldDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBFieldDescriptorProto_Builder*) builder {
  return [[[BatPBFieldDescriptorProto_Builder alloc] init] autorelease];
}
+ (BatPBFieldDescriptorProto_Builder*) builderWithPrototype:(BatPBFieldDescriptorProto*) prototype {
  return [[BatPBFieldDescriptorProto builder] mergeFrom:prototype];
}
- (BatPBFieldDescriptorProto_Builder*) builder {
  return [BatPBFieldDescriptorProto builder];
}
@end

BOOL PBFieldDescriptorProto_TypeIsValidValue(PBFieldDescriptorProto_Type value) {
  switch (value) {
    case PBFieldDescriptorProto_TypeTypeDouble:
    case PBFieldDescriptorProto_TypeTypeFloat:
    case PBFieldDescriptorProto_TypeTypeInt64:
    case PBFieldDescriptorProto_TypeTypeUint64:
    case PBFieldDescriptorProto_TypeTypeInt32:
    case PBFieldDescriptorProto_TypeTypeFixed64:
    case PBFieldDescriptorProto_TypeTypeFixed32:
    case PBFieldDescriptorProto_TypeTypeBool:
    case PBFieldDescriptorProto_TypeTypeString:
    case PBFieldDescriptorProto_TypeTypeGroup:
    case PBFieldDescriptorProto_TypeTypeMessage:
    case PBFieldDescriptorProto_TypeTypeBytes:
    case PBFieldDescriptorProto_TypeTypeUint32:
    case PBFieldDescriptorProto_TypeTypeEnum:
    case PBFieldDescriptorProto_TypeTypeSfixed32:
    case PBFieldDescriptorProto_TypeTypeSfixed64:
    case PBFieldDescriptorProto_TypeTypeSint32:
    case PBFieldDescriptorProto_TypeTypeSint64:
      return YES;
    default:
      return NO;
  }
}
BOOL PBFieldDescriptorProto_LabelIsValidValue(PBFieldDescriptorProto_Label value) {
  switch (value) {
    case PBFieldDescriptorProto_LabelLabelOptional:
    case PBFieldDescriptorProto_LabelLabelRequired:
    case PBFieldDescriptorProto_LabelLabelRepeated:
      return YES;
    default:
      return NO;
  }
}
@interface BatPBFieldDescriptorProto_Builder()
@property (retain) BatPBFieldDescriptorProto* result;
@end

@implementation BatPBFieldDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBFieldDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (BatPBGeneratedMessage*) internalGetResult {
  return result;
}
- (BatPBFieldDescriptorProto_Builder*) clear {
  self.result = [[[BatPBFieldDescriptorProto alloc] init] autorelease];
  return self;
}
- (BatPBFieldDescriptorProto_Builder*) clone {
  return [BatPBFieldDescriptorProto builderWithPrototype:result];
}
- (BatPBFieldDescriptorProto*) defaultInstance {
  return [BatPBFieldDescriptorProto defaultInstance];
}
- (BatPBFieldDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBFieldDescriptorProto*) buildPartial {
  BatPBFieldDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBFieldDescriptorProto_Builder*) mergeFrom:(BatPBFieldDescriptorProto*) other {
  if (other == [BatPBFieldDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasNumber) {
    [self setNumber:other.number];
  }
  if (other.hasLabel) {
    [self setLabel:other.label];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasTypeName) {
    [self setTypeName:other.typeName];
  }
  if (other.hasExtendee) {
    [self setExtendee:other.extendee];
  }
  if (other.hasDefaultValue) {
    [self setDefaultValue:other.defaultValue];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBFieldDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBFieldDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setExtendee:[input readString]];
        break;
      }
      case 24: {
        [self setNumber:[input readInt32]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (PBFieldDescriptorProto_LabelIsValidValue(value)) {
          [self setLabel:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        int32_t value = [input readEnum];
        if (PBFieldDescriptorProto_TypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 50: {
        [self setTypeName:[input readString]];
        break;
      }
      case 58: {
        [self setDefaultValue:[input readString]];
        break;
      }
      case 66: {
        BatPBFieldOptions_Builder* subBuilder = [BatPBFieldOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (BatPBFieldDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (BatPBFieldDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasNumber {
  return result.hasNumber;
}
- (int32_t) number {
  return result.number;
}
- (BatPBFieldDescriptorProto_Builder*) setNumber:(int32_t) value {
  result.hasNumber = YES;
  result.number = value;
  return self;
}
- (BatPBFieldDescriptorProto_Builder*) clearNumber {
  result.hasNumber = NO;
  result.number = 0;
  return self;
}
- (BOOL) hasLabel {
  return result.hasLabel;
}
- (PBFieldDescriptorProto_Label) label {
  return result.label;
}
- (BatPBFieldDescriptorProto_Builder*) setLabel:(PBFieldDescriptorProto_Label) value {
  result.hasLabel = YES;
  result.label = value;
  return self;
}
- (BatPBFieldDescriptorProto_Builder*) clearLabel {
  result.hasLabel = NO;
  result.label = PBFieldDescriptorProto_LabelLabelOptional;
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (PBFieldDescriptorProto_Type) type {
  return result.type;
}
- (BatPBFieldDescriptorProto_Builder*) setType:(PBFieldDescriptorProto_Type) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (BatPBFieldDescriptorProto_Builder*) clearType {
  result.hasType = NO;
  result.type = PBFieldDescriptorProto_TypeTypeDouble;
  return self;
}
- (BOOL) hasTypeName {
  return result.hasTypeName;
}
- (NSString*) typeName {
  return result.typeName;
}
- (BatPBFieldDescriptorProto_Builder*) setTypeName:(NSString*) value {
  result.hasTypeName = YES;
  result.typeName = value;
  return self;
}
- (BatPBFieldDescriptorProto_Builder*) clearTypeName {
  result.hasTypeName = NO;
  result.typeName = @"";
  return self;
}
- (BOOL) hasExtendee {
  return result.hasExtendee;
}
- (NSString*) extendee {
  return result.extendee;
}
- (BatPBFieldDescriptorProto_Builder*) setExtendee:(NSString*) value {
  result.hasExtendee = YES;
  result.extendee = value;
  return self;
}
- (BatPBFieldDescriptorProto_Builder*) clearExtendee {
  result.hasExtendee = NO;
  result.extendee = @"";
  return self;
}
- (BOOL) hasDefaultValue {
  return result.hasDefaultValue;
}
- (NSString*) defaultValue {
  return result.defaultValue;
}
- (BatPBFieldDescriptorProto_Builder*) setDefaultValue:(NSString*) value {
  result.hasDefaultValue = YES;
  result.defaultValue = value;
  return self;
}
- (BatPBFieldDescriptorProto_Builder*) clearDefaultValue {
  result.hasDefaultValue = NO;
  result.defaultValue = @"";
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (BatPBFieldOptions*) options {
  return result.options;
}
- (BatPBFieldDescriptorProto_Builder*) setOptions:(BatPBFieldOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (BatPBFieldDescriptorProto_Builder*) setOptionsBuilder:(BatPBFieldOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (BatPBFieldDescriptorProto_Builder*) mergeOptions:(BatPBFieldOptions*) value {
  if (result.hasOptions &&
      result.options != [BatPBFieldOptions defaultInstance]) {
    result.options =
      [[[BatPBFieldOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (BatPBFieldDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [BatPBFieldOptions defaultInstance];
  return self;
}
@end

@interface BatPBEnumDescriptorProto ()
@property (retain) NSString* name;
@property (retain) NSMutableArray* mutableValueList;
@property (retain) BatPBEnumOptions* options;
@end

@implementation BatPBEnumDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
@synthesize mutableValueList;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.mutableValueList = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.options = [BatPBEnumOptions defaultInstance];
  }
  return self;
}
static BatPBEnumDescriptorProto* defaultPBEnumDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [BatPBEnumDescriptorProto class]) {
    defaultPBEnumDescriptorProtoInstance = [[BatPBEnumDescriptorProto alloc] init];
  }
}
+ (BatPBEnumDescriptorProto*) defaultInstance {
  return defaultPBEnumDescriptorProtoInstance;
}
- (BatPBEnumDescriptorProto*) defaultInstance {
  return defaultPBEnumDescriptorProtoInstance;
}
- (NSArray*) valueList {
  return mutableValueList;
}
- (BatPBEnumValueDescriptorProto*) valueAtIndex:(int32_t) index {
  id value = [mutableValueList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBEnumValueDescriptorProto* element in self.valueList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  for (BatPBEnumValueDescriptorProto* element in self.valueList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasOptions) {
    [output writeMessage:3 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  for (BatPBEnumValueDescriptorProto* element in self.valueList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasOptions) {
    size += computeMessageSize(3, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBEnumDescriptorProto*) parseFromData:(NSData*) data {
  return (BatPBEnumDescriptorProto*)[[[BatPBEnumDescriptorProto builder] mergeFromData:data] build];
}
+ (BatPBEnumDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBEnumDescriptorProto*)[[[BatPBEnumDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBEnumDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBEnumDescriptorProto*)[[[BatPBEnumDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (BatPBEnumDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBEnumDescriptorProto*)[[[BatPBEnumDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBEnumDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBEnumDescriptorProto*)[[[BatPBEnumDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBEnumDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBEnumDescriptorProto*)[[[BatPBEnumDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBEnumDescriptorProto_Builder*) builder {
  return [[[BatPBEnumDescriptorProto_Builder alloc] init] autorelease];
}
+ (BatPBEnumDescriptorProto_Builder*) builderWithPrototype:(BatPBEnumDescriptorProto*) prototype {
  return [[BatPBEnumDescriptorProto builder] mergeFrom:prototype];
}
- (BatPBEnumDescriptorProto_Builder*) builder {
  return [BatPBEnumDescriptorProto builder];
}
@end

@interface BatPBEnumDescriptorProto_Builder()
@property (retain) BatPBEnumDescriptorProto* result;
@end

@implementation BatPBEnumDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBEnumDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (BatPBGeneratedMessage*) internalGetResult {
  return result;
}
- (BatPBEnumDescriptorProto_Builder*) clear {
  self.result = [[[BatPBEnumDescriptorProto alloc] init] autorelease];
  return self;
}
- (BatPBEnumDescriptorProto_Builder*) clone {
  return [BatPBEnumDescriptorProto builderWithPrototype:result];
}
- (BatPBEnumDescriptorProto*) defaultInstance {
  return [BatPBEnumDescriptorProto defaultInstance];
}
- (BatPBEnumDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBEnumDescriptorProto*) buildPartial {
  BatPBEnumDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBEnumDescriptorProto_Builder*) mergeFrom:(BatPBEnumDescriptorProto*) other {
  if (other == [BatPBEnumDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.mutableValueList.count > 0) {
    if (result.mutableValueList == nil) {
      result.mutableValueList = [NSMutableArray array];
    }
    [result.mutableValueList addObjectsFromArray:other.mutableValueList];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBEnumDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBEnumDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        BatPBEnumValueDescriptorProto_Builder* subBuilder = [BatPBEnumValueDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addValue:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        BatPBEnumOptions_Builder* subBuilder = [BatPBEnumOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (BatPBEnumDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (BatPBEnumDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (NSArray*) valueList {
  if (result.mutableValueList == nil) { return [NSArray array]; }
  return result.mutableValueList;
}
- (BatPBEnumValueDescriptorProto*) valueAtIndex:(int32_t) index {
  return [result valueAtIndex:index];
}
- (BatPBEnumDescriptorProto_Builder*) replaceValueAtIndex:(int32_t) index with:(BatPBEnumValueDescriptorProto*) value {
  [result.mutableValueList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBEnumDescriptorProto_Builder*) addAllValue:(NSArray*) values {
  if (result.mutableValueList == nil) {
    result.mutableValueList = [NSMutableArray array];
  }
  [result.mutableValueList addObjectsFromArray:values];
  return self;
}
- (BatPBEnumDescriptorProto_Builder*) clearValueList {
  result.mutableValueList = nil;
  return self;
}
- (BatPBEnumDescriptorProto_Builder*) addValue:(BatPBEnumValueDescriptorProto*) value {
  if (result.mutableValueList == nil) {
    result.mutableValueList = [NSMutableArray array];
  }
  [result.mutableValueList addObject:value];
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (BatPBEnumOptions*) options {
  return result.options;
}
- (BatPBEnumDescriptorProto_Builder*) setOptions:(BatPBEnumOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (BatPBEnumDescriptorProto_Builder*) setOptionsBuilder:(BatPBEnumOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (BatPBEnumDescriptorProto_Builder*) mergeOptions:(BatPBEnumOptions*) value {
  if (result.hasOptions &&
      result.options != [BatPBEnumOptions defaultInstance]) {
    result.options =
      [[[BatPBEnumOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (BatPBEnumDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [BatPBEnumOptions defaultInstance];
  return self;
}
@end

@interface BatPBEnumValueDescriptorProto ()
@property (retain) NSString* name;
@property int32_t number;
@property (retain) BatPBEnumValueOptions* options;
@end

@implementation BatPBEnumValueDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasNumber {
  return !!hasNumber_;
}
- (void) setHasNumber:(BOOL) value {
  hasNumber_ = !!value;
}
@synthesize number;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.number = 0;
    self.options = [BatPBEnumValueOptions defaultInstance];
  }
  return self;
}
static BatPBEnumValueDescriptorProto* defaultPBEnumValueDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [BatPBEnumValueDescriptorProto class]) {
    defaultPBEnumValueDescriptorProtoInstance = [[BatPBEnumValueDescriptorProto alloc] init];
  }
}
+ (BatPBEnumValueDescriptorProto*) defaultInstance {
  return defaultPBEnumValueDescriptorProtoInstance;
}
- (BatPBEnumValueDescriptorProto*) defaultInstance {
  return defaultPBEnumValueDescriptorProtoInstance;
}
- (BOOL) isInitialized {
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasNumber) {
    [output writeInt32:2 value:self.number];
  }
  if (self.hasOptions) {
    [output writeMessage:3 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasNumber) {
    size += computeInt32Size(2, self.number);
  }
  if (self.hasOptions) {
    size += computeMessageSize(3, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBEnumValueDescriptorProto*) parseFromData:(NSData*) data {
  return (BatPBEnumValueDescriptorProto*)[[[BatPBEnumValueDescriptorProto builder] mergeFromData:data] build];
}
+ (BatPBEnumValueDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBEnumValueDescriptorProto*)[[[BatPBEnumValueDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBEnumValueDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBEnumValueDescriptorProto*)[[[BatPBEnumValueDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (BatPBEnumValueDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBEnumValueDescriptorProto*)[[[BatPBEnumValueDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBEnumValueDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBEnumValueDescriptorProto*)[[[BatPBEnumValueDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBEnumValueDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBEnumValueDescriptorProto*)[[[BatPBEnumValueDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBEnumValueDescriptorProto_Builder*) builder {
  return [[[BatPBEnumValueDescriptorProto_Builder alloc] init] autorelease];
}
+ (BatPBEnumValueDescriptorProto_Builder*) builderWithPrototype:(BatPBEnumValueDescriptorProto*) prototype {
  return [[BatPBEnumValueDescriptorProto builder] mergeFrom:prototype];
}
- (BatPBEnumValueDescriptorProto_Builder*) builder {
  return [BatPBEnumValueDescriptorProto builder];
}
@end

@interface BatPBEnumValueDescriptorProto_Builder()
@property (retain) BatPBEnumValueDescriptorProto* result;
@end

@implementation BatPBEnumValueDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBEnumValueDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (BatPBGeneratedMessage*) internalGetResult {
  return result;
}
- (BatPBEnumValueDescriptorProto_Builder*) clear {
  self.result = [[[BatPBEnumValueDescriptorProto alloc] init] autorelease];
  return self;
}
- (BatPBEnumValueDescriptorProto_Builder*) clone {
  return [BatPBEnumValueDescriptorProto builderWithPrototype:result];
}
- (BatPBEnumValueDescriptorProto*) defaultInstance {
  return [BatPBEnumValueDescriptorProto defaultInstance];
}
- (BatPBEnumValueDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBEnumValueDescriptorProto*) buildPartial {
  BatPBEnumValueDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBEnumValueDescriptorProto_Builder*) mergeFrom:(BatPBEnumValueDescriptorProto*) other {
  if (other == [BatPBEnumValueDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasNumber) {
    [self setNumber:other.number];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBEnumValueDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBEnumValueDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 16: {
        [self setNumber:[input readInt32]];
        break;
      }
      case 26: {
        BatPBEnumValueOptions_Builder* subBuilder = [BatPBEnumValueOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (BatPBEnumValueDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (BatPBEnumValueDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasNumber {
  return result.hasNumber;
}
- (int32_t) number {
  return result.number;
}
- (BatPBEnumValueDescriptorProto_Builder*) setNumber:(int32_t) value {
  result.hasNumber = YES;
  result.number = value;
  return self;
}
- (BatPBEnumValueDescriptorProto_Builder*) clearNumber {
  result.hasNumber = NO;
  result.number = 0;
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (BatPBEnumValueOptions*) options {
  return result.options;
}
- (BatPBEnumValueDescriptorProto_Builder*) setOptions:(BatPBEnumValueOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (BatPBEnumValueDescriptorProto_Builder*) setOptionsBuilder:(BatPBEnumValueOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (BatPBEnumValueDescriptorProto_Builder*) mergeOptions:(BatPBEnumValueOptions*) value {
  if (result.hasOptions &&
      result.options != [BatPBEnumValueOptions defaultInstance]) {
    result.options =
      [[[BatPBEnumValueOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (BatPBEnumValueDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [BatPBEnumValueOptions defaultInstance];
  return self;
}
@end

@interface BatPBServiceDescriptorProto ()
@property (retain) NSString* name;
@property (retain) NSMutableArray* mutableMethodList;
@property (retain) BatPBServiceOptions* options;
@end

@implementation BatPBServiceDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
@synthesize mutableMethodList;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.mutableMethodList = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.options = [BatPBServiceOptions defaultInstance];
  }
  return self;
}
static BatPBServiceDescriptorProto* defaultPBServiceDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [BatPBServiceDescriptorProto class]) {
    defaultPBServiceDescriptorProtoInstance = [[BatPBServiceDescriptorProto alloc] init];
  }
}
+ (BatPBServiceDescriptorProto*) defaultInstance {
  return defaultPBServiceDescriptorProtoInstance;
}
- (BatPBServiceDescriptorProto*) defaultInstance {
  return defaultPBServiceDescriptorProtoInstance;
}
- (NSArray*) methodList {
  return mutableMethodList;
}
- (BatPBMethodDescriptorProto*) methodAtIndex:(int32_t) index {
  id value = [mutableMethodList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBMethodDescriptorProto* element in self.methodList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  for (BatPBMethodDescriptorProto* element in self.methodList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasOptions) {
    [output writeMessage:3 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  for (BatPBMethodDescriptorProto* element in self.methodList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasOptions) {
    size += computeMessageSize(3, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBServiceDescriptorProto*) parseFromData:(NSData*) data {
  return (BatPBServiceDescriptorProto*)[[[BatPBServiceDescriptorProto builder] mergeFromData:data] build];
}
+ (BatPBServiceDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBServiceDescriptorProto*)[[[BatPBServiceDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBServiceDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBServiceDescriptorProto*)[[[BatPBServiceDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (BatPBServiceDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBServiceDescriptorProto*)[[[BatPBServiceDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBServiceDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBServiceDescriptorProto*)[[[BatPBServiceDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBServiceDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBServiceDescriptorProto*)[[[BatPBServiceDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBServiceDescriptorProto_Builder*) builder {
  return [[[BatPBServiceDescriptorProto_Builder alloc] init] autorelease];
}
+ (BatPBServiceDescriptorProto_Builder*) builderWithPrototype:(BatPBServiceDescriptorProto*) prototype {
  return [[BatPBServiceDescriptorProto builder] mergeFrom:prototype];
}
- (BatPBServiceDescriptorProto_Builder*) builder {
  return [BatPBServiceDescriptorProto builder];
}
@end

@interface BatPBServiceDescriptorProto_Builder()
@property (retain) BatPBServiceDescriptorProto* result;
@end

@implementation BatPBServiceDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBServiceDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (BatPBGeneratedMessage*) internalGetResult {
  return result;
}
- (BatPBServiceDescriptorProto_Builder*) clear {
  self.result = [[[BatPBServiceDescriptorProto alloc] init] autorelease];
  return self;
}
- (BatPBServiceDescriptorProto_Builder*) clone {
  return [BatPBServiceDescriptorProto builderWithPrototype:result];
}
- (BatPBServiceDescriptorProto*) defaultInstance {
  return [BatPBServiceDescriptorProto defaultInstance];
}
- (BatPBServiceDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBServiceDescriptorProto*) buildPartial {
  BatPBServiceDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBServiceDescriptorProto_Builder*) mergeFrom:(BatPBServiceDescriptorProto*) other {
  if (other == [BatPBServiceDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.mutableMethodList.count > 0) {
    if (result.mutableMethodList == nil) {
      result.mutableMethodList = [NSMutableArray array];
    }
    [result.mutableMethodList addObjectsFromArray:other.mutableMethodList];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBServiceDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBServiceDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        BatPBMethodDescriptorProto_Builder* subBuilder = [BatPBMethodDescriptorProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMethod:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        BatPBServiceOptions_Builder* subBuilder = [BatPBServiceOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (BatPBServiceDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (BatPBServiceDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (NSArray*) methodList {
  if (result.mutableMethodList == nil) { return [NSArray array]; }
  return result.mutableMethodList;
}
- (BatPBMethodDescriptorProto*) methodAtIndex:(int32_t) index {
  return [result methodAtIndex:index];
}
- (BatPBServiceDescriptorProto_Builder*) replaceMethodAtIndex:(int32_t) index with:(BatPBMethodDescriptorProto*) value {
  [result.mutableMethodList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBServiceDescriptorProto_Builder*) addAllMethod:(NSArray*) values {
  if (result.mutableMethodList == nil) {
    result.mutableMethodList = [NSMutableArray array];
  }
  [result.mutableMethodList addObjectsFromArray:values];
  return self;
}
- (BatPBServiceDescriptorProto_Builder*) clearMethodList {
  result.mutableMethodList = nil;
  return self;
}
- (BatPBServiceDescriptorProto_Builder*) addMethod:(BatPBMethodDescriptorProto*) value {
  if (result.mutableMethodList == nil) {
    result.mutableMethodList = [NSMutableArray array];
  }
  [result.mutableMethodList addObject:value];
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (BatPBServiceOptions*) options {
  return result.options;
}
- (BatPBServiceDescriptorProto_Builder*) setOptions:(BatPBServiceOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (BatPBServiceDescriptorProto_Builder*) setOptionsBuilder:(BatPBServiceOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (BatPBServiceDescriptorProto_Builder*) mergeOptions:(BatPBServiceOptions*) value {
  if (result.hasOptions &&
      result.options != [BatPBServiceOptions defaultInstance]) {
    result.options =
      [[[BatPBServiceOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (BatPBServiceDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [BatPBServiceOptions defaultInstance];
  return self;
}
@end

@interface BatPBMethodDescriptorProto ()
@property (retain) NSString* name;
@property (retain) NSString* inputType;
@property (retain) NSString* outputType;
@property (retain) BatPBMethodOptions* options;
@end

@implementation BatPBMethodDescriptorProto

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasInputType {
  return !!hasInputType_;
}
- (void) setHasInputType:(BOOL) value {
  hasInputType_ = !!value;
}
@synthesize inputType;
- (BOOL) hasOutputType {
  return !!hasOutputType_;
}
- (void) setHasOutputType:(BOOL) value {
  hasOutputType_ = !!value;
}
@synthesize outputType;
- (BOOL) hasOptions {
  return !!hasOptions_;
}
- (void) setHasOptions:(BOOL) value {
  hasOptions_ = !!value;
}
@synthesize options;
- (void) dealloc {
  self.name = nil;
  self.inputType = nil;
  self.outputType = nil;
  self.options = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.inputType = @"";
    self.outputType = @"";
    self.options = [BatPBMethodOptions defaultInstance];
  }
  return self;
}
static BatPBMethodDescriptorProto* defaultPBMethodDescriptorProtoInstance = nil;
+ (void) initialize {
  if (self == [BatPBMethodDescriptorProto class]) {
    defaultPBMethodDescriptorProtoInstance = [[BatPBMethodDescriptorProto alloc] init];
  }
}
+ (BatPBMethodDescriptorProto*) defaultInstance {
  return defaultPBMethodDescriptorProtoInstance;
}
- (BatPBMethodDescriptorProto*) defaultInstance {
  return defaultPBMethodDescriptorProtoInstance;
}
- (BOOL) isInitialized {
  if (self.hasOptions) {
    if (!self.options.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasInputType) {
    [output writeString:2 value:self.inputType];
  }
  if (self.hasOutputType) {
    [output writeString:3 value:self.outputType];
  }
  if (self.hasOptions) {
    [output writeMessage:4 value:self.options];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasInputType) {
    size += computeStringSize(2, self.inputType);
  }
  if (self.hasOutputType) {
    size += computeStringSize(3, self.outputType);
  }
  if (self.hasOptions) {
    size += computeMessageSize(4, self.options);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBMethodDescriptorProto*) parseFromData:(NSData*) data {
  return (BatPBMethodDescriptorProto*)[[[BatPBMethodDescriptorProto builder] mergeFromData:data] build];
}
+ (BatPBMethodDescriptorProto*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBMethodDescriptorProto*)[[[BatPBMethodDescriptorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBMethodDescriptorProto*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBMethodDescriptorProto*)[[[BatPBMethodDescriptorProto builder] mergeFromInputStream:input] build];
}
+ (BatPBMethodDescriptorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBMethodDescriptorProto*)[[[BatPBMethodDescriptorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBMethodDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBMethodDescriptorProto*)[[[BatPBMethodDescriptorProto builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBMethodDescriptorProto*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBMethodDescriptorProto*)[[[BatPBMethodDescriptorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBMethodDescriptorProto_Builder*) builder {
  return [[[BatPBMethodDescriptorProto_Builder alloc] init] autorelease];
}
+ (BatPBMethodDescriptorProto_Builder*) builderWithPrototype:(BatPBMethodDescriptorProto*) prototype {
  return [[BatPBMethodDescriptorProto builder] mergeFrom:prototype];
}
- (BatPBMethodDescriptorProto_Builder*) builder {
  return [BatPBMethodDescriptorProto builder];
}
@end

@interface BatPBMethodDescriptorProto_Builder()
@property (retain) BatPBMethodDescriptorProto* result;
@end

@implementation BatPBMethodDescriptorProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBMethodDescriptorProto alloc] init] autorelease];
  }
  return self;
}
- (BatPBGeneratedMessage*) internalGetResult {
  return result;
}
- (BatPBMethodDescriptorProto_Builder*) clear {
  self.result = [[[BatPBMethodDescriptorProto alloc] init] autorelease];
  return self;
}
- (BatPBMethodDescriptorProto_Builder*) clone {
  return [BatPBMethodDescriptorProto builderWithPrototype:result];
}
- (BatPBMethodDescriptorProto*) defaultInstance {
  return [BatPBMethodDescriptorProto defaultInstance];
}
- (BatPBMethodDescriptorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBMethodDescriptorProto*) buildPartial {
  BatPBMethodDescriptorProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBMethodDescriptorProto_Builder*) mergeFrom:(BatPBMethodDescriptorProto*) other {
  if (other == [BatPBMethodDescriptorProto defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasInputType) {
    [self setInputType:other.inputType];
  }
  if (other.hasOutputType) {
    [self setOutputType:other.outputType];
  }
  if (other.hasOptions) {
    [self mergeOptions:other.options];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBMethodDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBMethodDescriptorProto_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setInputType:[input readString]];
        break;
      }
      case 26: {
        [self setOutputType:[input readString]];
        break;
      }
      case 34: {
        BatPBMethodOptions_Builder* subBuilder = [BatPBMethodOptions builder];
        if (self.hasOptions) {
          [subBuilder mergeFrom:self.options];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (BatPBMethodDescriptorProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (BatPBMethodDescriptorProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasInputType {
  return result.hasInputType;
}
- (NSString*) inputType {
  return result.inputType;
}
- (BatPBMethodDescriptorProto_Builder*) setInputType:(NSString*) value {
  result.hasInputType = YES;
  result.inputType = value;
  return self;
}
- (BatPBMethodDescriptorProto_Builder*) clearInputType {
  result.hasInputType = NO;
  result.inputType = @"";
  return self;
}
- (BOOL) hasOutputType {
  return result.hasOutputType;
}
- (NSString*) outputType {
  return result.outputType;
}
- (BatPBMethodDescriptorProto_Builder*) setOutputType:(NSString*) value {
  result.hasOutputType = YES;
  result.outputType = value;
  return self;
}
- (BatPBMethodDescriptorProto_Builder*) clearOutputType {
  result.hasOutputType = NO;
  result.outputType = @"";
  return self;
}
- (BOOL) hasOptions {
  return result.hasOptions;
}
- (BatPBMethodOptions*) options {
  return result.options;
}
- (BatPBMethodDescriptorProto_Builder*) setOptions:(BatPBMethodOptions*) value {
  result.hasOptions = YES;
  result.options = value;
  return self;
}
- (BatPBMethodDescriptorProto_Builder*) setOptionsBuilder:(BatPBMethodOptions_Builder*) builderForValue {
  return [self setOptions:[builderForValue build]];
}
- (BatPBMethodDescriptorProto_Builder*) mergeOptions:(BatPBMethodOptions*) value {
  if (result.hasOptions &&
      result.options != [BatPBMethodOptions defaultInstance]) {
    result.options =
      [[[BatPBMethodOptions builderWithPrototype:result.options] mergeFrom:value] buildPartial];
  } else {
    result.options = value;
  }
  result.hasOptions = YES;
  return self;
}
- (BatPBMethodDescriptorProto_Builder*) clearOptions {
  result.hasOptions = NO;
  result.options = [BatPBMethodOptions defaultInstance];
  return self;
}
@end

@interface BatPBFileOptions ()
@property (retain) NSString* javaPackage;
@property (retain) NSString* javaOuterClassname;
@property BOOL javaMultipleFiles;
@property PBFileOptions_OptimizeMode optimizeFor;
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation BatPBFileOptions

- (BOOL) hasJavaPackage {
  return !!hasJavaPackage_;
}
- (void) setHasJavaPackage:(BOOL) value {
  hasJavaPackage_ = !!value;
}
@synthesize javaPackage;
- (BOOL) hasJavaOuterClassname {
  return !!hasJavaOuterClassname_;
}
- (void) setHasJavaOuterClassname:(BOOL) value {
  hasJavaOuterClassname_ = !!value;
}
@synthesize javaOuterClassname;
- (BOOL) hasJavaMultipleFiles {
  return !!hasJavaMultipleFiles_;
}
- (void) setHasJavaMultipleFiles:(BOOL) value {
  hasJavaMultipleFiles_ = !!value;
}
- (BOOL) javaMultipleFiles {
  return !!javaMultipleFiles_;
}
- (void) setJavaMultipleFiles:(BOOL) value {
  javaMultipleFiles_ = !!value;
}
- (BOOL) hasOptimizeFor {
  return !!hasOptimizeFor_;
}
- (void) setHasOptimizeFor:(BOOL) value {
  hasOptimizeFor_ = !!value;
}
@synthesize optimizeFor;
@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.javaPackage = nil;
  self.javaOuterClassname = nil;
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.javaPackage = @"";
    self.javaOuterClassname = @"";
    self.javaMultipleFiles = NO;
    self.optimizeFor = PBFileOptions_OptimizeModeSpeed;
  }
  return self;
}
static BatPBFileOptions* defaultPBFileOptionsInstance = nil;
+ (void) initialize {
  if (self == [BatPBFileOptions class]) {
    defaultPBFileOptionsInstance = [[BatPBFileOptions alloc] init];
  }
}
+ (BatPBFileOptions*) defaultInstance {
  return defaultPBFileOptionsInstance;
}
- (BatPBFileOptions*) defaultInstance {
  return defaultPBFileOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  if (self.hasJavaPackage) {
    [output writeString:1 value:self.javaPackage];
  }
  if (self.hasJavaOuterClassname) {
    [output writeString:8 value:self.javaOuterClassname];
  }
  if (self.hasOptimizeFor) {
    [output writeEnum:9 value:self.optimizeFor];
  }
  if (self.hasJavaMultipleFiles) {
    [output writeBool:10 value:self.javaMultipleFiles];
  }
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasJavaPackage) {
    size += computeStringSize(1, self.javaPackage);
  }
  if (self.hasJavaOuterClassname) {
    size += computeStringSize(8, self.javaOuterClassname);
  }
  if (self.hasOptimizeFor) {
    size += computeEnumSize(9, self.optimizeFor);
  }
  if (self.hasJavaMultipleFiles) {
    size += computeBoolSize(10, self.javaMultipleFiles);
  }
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBFileOptions*) parseFromData:(NSData*) data {
  return (BatPBFileOptions*)[[[BatPBFileOptions builder] mergeFromData:data] build];
}
+ (BatPBFileOptions*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFileOptions*)[[[BatPBFileOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBFileOptions*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBFileOptions*)[[[BatPBFileOptions builder] mergeFromInputStream:input] build];
}
+ (BatPBFileOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFileOptions*)[[[BatPBFileOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBFileOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBFileOptions*)[[[BatPBFileOptions builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBFileOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFileOptions*)[[[BatPBFileOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBFileOptions_Builder*) builder {
  return [[[BatPBFileOptions_Builder alloc] init] autorelease];
}
+ (BatPBFileOptions_Builder*) builderWithPrototype:(BatPBFileOptions*) prototype {
  return [[BatPBFileOptions builder] mergeFrom:prototype];
}
- (BatPBFileOptions_Builder*) builder {
  return [BatPBFileOptions builder];
}
@end

BOOL PBFileOptions_OptimizeModeIsValidValue(PBFileOptions_OptimizeMode value) {
  switch (value) {
    case PBFileOptions_OptimizeModeSpeed:
    case PBFileOptions_OptimizeModeCodeSize:
    case PBFileOptions_OptimizeModeLiteRuntime:
      return YES;
    default:
      return NO;
  }
}
@interface BatPBFileOptions_Builder()
@property (retain) BatPBFileOptions* result;
@end

@implementation BatPBFileOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBFileOptions alloc] init] autorelease];
  }
  return self;
}
- (BatPBExtendableMessage*) internalGetResult {
  return result;
}
- (BatPBFileOptions_Builder*) clear {
  self.result = [[[BatPBFileOptions alloc] init] autorelease];
  return self;
}
- (BatPBFileOptions_Builder*) clone {
  return [BatPBFileOptions builderWithPrototype:result];
}
- (BatPBFileOptions*) defaultInstance {
  return [BatPBFileOptions defaultInstance];
}
- (BatPBFileOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBFileOptions*) buildPartial {
  BatPBFileOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBFileOptions_Builder*) mergeFrom:(BatPBFileOptions*) other {
  if (other == [BatPBFileOptions defaultInstance]) {
    return self;
  }
  if (other.hasJavaPackage) {
    [self setJavaPackage:other.javaPackage];
  }
  if (other.hasJavaOuterClassname) {
    [self setJavaOuterClassname:other.javaOuterClassname];
  }
  if (other.hasJavaMultipleFiles) {
    [self setJavaMultipleFiles:other.javaMultipleFiles];
  }
  if (other.hasOptimizeFor) {
    [self setOptimizeFor:other.optimizeFor];
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBFileOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBFileOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setJavaPackage:[input readString]];
        break;
      }
      case 66: {
        [self setJavaOuterClassname:[input readString]];
        break;
      }
      case 72: {
        int32_t value = [input readEnum];
        if (PBFileOptions_OptimizeModeIsValidValue(value)) {
          [self setOptimizeFor:value];
        } else {
          [unknownFields mergeVarintField:9 value:value];
        }
        break;
      }
      case 80: {
        [self setJavaMultipleFiles:[input readBool]];
        break;
      }
      case 7994: {
        BatPBUninterpretedOption_Builder* subBuilder = [BatPBUninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasJavaPackage {
  return result.hasJavaPackage;
}
- (NSString*) javaPackage {
  return result.javaPackage;
}
- (BatPBFileOptions_Builder*) setJavaPackage:(NSString*) value {
  result.hasJavaPackage = YES;
  result.javaPackage = value;
  return self;
}
- (BatPBFileOptions_Builder*) clearJavaPackage {
  result.hasJavaPackage = NO;
  result.javaPackage = @"";
  return self;
}
- (BOOL) hasJavaOuterClassname {
  return result.hasJavaOuterClassname;
}
- (NSString*) javaOuterClassname {
  return result.javaOuterClassname;
}
- (BatPBFileOptions_Builder*) setJavaOuterClassname:(NSString*) value {
  result.hasJavaOuterClassname = YES;
  result.javaOuterClassname = value;
  return self;
}
- (BatPBFileOptions_Builder*) clearJavaOuterClassname {
  result.hasJavaOuterClassname = NO;
  result.javaOuterClassname = @"";
  return self;
}
- (BOOL) hasJavaMultipleFiles {
  return result.hasJavaMultipleFiles;
}
- (BOOL) javaMultipleFiles {
  return result.javaMultipleFiles;
}
- (BatPBFileOptions_Builder*) setJavaMultipleFiles:(BOOL) value {
  result.hasJavaMultipleFiles = YES;
  result.javaMultipleFiles = value;
  return self;
}
- (BatPBFileOptions_Builder*) clearJavaMultipleFiles {
  result.hasJavaMultipleFiles = NO;
  result.javaMultipleFiles = NO;
  return self;
}
- (BOOL) hasOptimizeFor {
  return result.hasOptimizeFor;
}
- (PBFileOptions_OptimizeMode) optimizeFor {
  return result.optimizeFor;
}
- (BatPBFileOptions_Builder*) setOptimizeFor:(PBFileOptions_OptimizeMode) value {
  result.hasOptimizeFor = YES;
  result.optimizeFor = value;
  return self;
}
- (BatPBFileOptions_Builder*) clearOptimizeFor {
  result.hasOptimizeFor = NO;
  result.optimizeFor = PBFileOptions_OptimizeModeSpeed;
  return self;
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (BatPBFileOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(BatPBUninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBFileOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (BatPBFileOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (BatPBFileOptions_Builder*) addUninterpretedOption:(BatPBUninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface BatPBMessageOptions ()
@property BOOL messageSetWireFormat;
@property BOOL noStandardDescriptorAccessor;
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation BatPBMessageOptions

- (BOOL) hasMessageSetWireFormat {
  return !!hasMessageSetWireFormat_;
}
- (void) setHasMessageSetWireFormat:(BOOL) value {
  hasMessageSetWireFormat_ = !!value;
}
- (BOOL) messageSetWireFormat {
  return !!messageSetWireFormat_;
}
- (void) setMessageSetWireFormat:(BOOL) value {
  messageSetWireFormat_ = !!value;
}
- (BOOL) hasNoStandardDescriptorAccessor {
  return !!hasNoStandardDescriptorAccessor_;
}
- (void) setHasNoStandardDescriptorAccessor:(BOOL) value {
  hasNoStandardDescriptorAccessor_ = !!value;
}
- (BOOL) noStandardDescriptorAccessor {
  return !!noStandardDescriptorAccessor_;
}
- (void) setNoStandardDescriptorAccessor:(BOOL) value {
  noStandardDescriptorAccessor_ = !!value;
}
@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.messageSetWireFormat = NO;
    self.noStandardDescriptorAccessor = NO;
  }
  return self;
}
static BatPBMessageOptions* defaultPBMessageOptionsInstance = nil;
+ (void) initialize {
  if (self == [BatPBMessageOptions class]) {
    defaultPBMessageOptionsInstance = [[BatPBMessageOptions alloc] init];
  }
}
+ (BatPBMessageOptions*) defaultInstance {
  return defaultPBMessageOptionsInstance;
}
- (BatPBMessageOptions*) defaultInstance {
  return defaultPBMessageOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  if (self.hasMessageSetWireFormat) {
    [output writeBool:1 value:self.messageSetWireFormat];
  }
  if (self.hasNoStandardDescriptorAccessor) {
    [output writeBool:2 value:self.noStandardDescriptorAccessor];
  }
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMessageSetWireFormat) {
    size += computeBoolSize(1, self.messageSetWireFormat);
  }
  if (self.hasNoStandardDescriptorAccessor) {
    size += computeBoolSize(2, self.noStandardDescriptorAccessor);
  }
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBMessageOptions*) parseFromData:(NSData*) data {
  return (BatPBMessageOptions*)[[[BatPBMessageOptions builder] mergeFromData:data] build];
}
+ (BatPBMessageOptions*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBMessageOptions*)[[[BatPBMessageOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBMessageOptions*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBMessageOptions*)[[[BatPBMessageOptions builder] mergeFromInputStream:input] build];
}
+ (BatPBMessageOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBMessageOptions*)[[[BatPBMessageOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBMessageOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBMessageOptions*)[[[BatPBMessageOptions builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBMessageOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBMessageOptions*)[[[BatPBMessageOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBMessageOptions_Builder*) builder {
  return [[[BatPBMessageOptions_Builder alloc] init] autorelease];
}
+ (BatPBMessageOptions_Builder*) builderWithPrototype:(BatPBMessageOptions*) prototype {
  return [[BatPBMessageOptions builder] mergeFrom:prototype];
}
- (BatPBMessageOptions_Builder*) builder {
  return [BatPBMessageOptions builder];
}
@end

@interface BatPBMessageOptions_Builder()
@property (retain) BatPBMessageOptions* result;
@end

@implementation BatPBMessageOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBMessageOptions alloc] init] autorelease];
  }
  return self;
}
- (BatPBExtendableMessage*) internalGetResult {
  return result;
}
- (BatPBMessageOptions_Builder*) clear {
  self.result = [[[BatPBMessageOptions alloc] init] autorelease];
  return self;
}
- (BatPBMessageOptions_Builder*) clone {
  return [BatPBMessageOptions builderWithPrototype:result];
}
- (BatPBMessageOptions*) defaultInstance {
  return [BatPBMessageOptions defaultInstance];
}
- (BatPBMessageOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBMessageOptions*) buildPartial {
  BatPBMessageOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBMessageOptions_Builder*) mergeFrom:(BatPBMessageOptions*) other {
  if (other == [BatPBMessageOptions defaultInstance]) {
    return self;
  }
  if (other.hasMessageSetWireFormat) {
    [self setMessageSetWireFormat:other.messageSetWireFormat];
  }
  if (other.hasNoStandardDescriptorAccessor) {
    [self setNoStandardDescriptorAccessor:other.noStandardDescriptorAccessor];
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBMessageOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBMessageOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMessageSetWireFormat:[input readBool]];
        break;
      }
      case 16: {
        [self setNoStandardDescriptorAccessor:[input readBool]];
        break;
      }
      case 7994: {
        BatPBUninterpretedOption_Builder* subBuilder = [BatPBUninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasMessageSetWireFormat {
  return result.hasMessageSetWireFormat;
}
- (BOOL) messageSetWireFormat {
  return result.messageSetWireFormat;
}
- (BatPBMessageOptions_Builder*) setMessageSetWireFormat:(BOOL) value {
  result.hasMessageSetWireFormat = YES;
  result.messageSetWireFormat = value;
  return self;
}
- (BatPBMessageOptions_Builder*) clearMessageSetWireFormat {
  result.hasMessageSetWireFormat = NO;
  result.messageSetWireFormat = NO;
  return self;
}
- (BOOL) hasNoStandardDescriptorAccessor {
  return result.hasNoStandardDescriptorAccessor;
}
- (BOOL) noStandardDescriptorAccessor {
  return result.noStandardDescriptorAccessor;
}
- (BatPBMessageOptions_Builder*) setNoStandardDescriptorAccessor:(BOOL) value {
  result.hasNoStandardDescriptorAccessor = YES;
  result.noStandardDescriptorAccessor = value;
  return self;
}
- (BatPBMessageOptions_Builder*) clearNoStandardDescriptorAccessor {
  result.hasNoStandardDescriptorAccessor = NO;
  result.noStandardDescriptorAccessor = NO;
  return self;
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (BatPBMessageOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(BatPBUninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBMessageOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (BatPBMessageOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (BatPBMessageOptions_Builder*) addUninterpretedOption:(BatPBUninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface BatPBFieldOptions ()
@property PBFieldOptions_CType ctype;
@property BOOL packed;
@property BOOL deprecated;
@property (retain) NSString* experimentalMapKey;
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation BatPBFieldOptions

- (BOOL) hasCtype {
  return !!hasCtype_;
}
- (void) setHasCtype:(BOOL) value {
  hasCtype_ = !!value;
}
@synthesize ctype;
- (BOOL) hasPacked {
  return !!hasPacked_;
}
- (void) setHasPacked:(BOOL) value {
  hasPacked_ = !!value;
}
- (BOOL) packed {
  return !!packed_;
}
- (void) setPacked:(BOOL) value {
  packed_ = !!value;
}
- (BOOL) hasDeprecated {
  return !!hasDeprecated_;
}
- (void) setHasDeprecated:(BOOL) value {
  hasDeprecated_ = !!value;
}
- (BOOL) deprecated {
  return !!deprecated_;
}
- (void) setDeprecated:(BOOL) value {
  deprecated_ = !!value;
}
- (BOOL) hasExperimentalMapKey {
  return !!hasExperimentalMapKey_;
}
- (void) setHasExperimentalMapKey:(BOOL) value {
  hasExperimentalMapKey_ = !!value;
}
@synthesize experimentalMapKey;
@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.experimentalMapKey = nil;
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.ctype = PBFieldOptions_CTypeCord;
    self.packed = NO;
    self.deprecated = NO;
    self.experimentalMapKey = @"";
  }
  return self;
}
static BatPBFieldOptions* defaultPBFieldOptionsInstance = nil;
+ (void) initialize {
  if (self == [BatPBFieldOptions class]) {
    defaultPBFieldOptionsInstance = [[BatPBFieldOptions alloc] init];
  }
}
+ (BatPBFieldOptions*) defaultInstance {
  return defaultPBFieldOptionsInstance;
}
- (BatPBFieldOptions*) defaultInstance {
  return defaultPBFieldOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  if (self.hasCtype) {
    [output writeEnum:1 value:self.ctype];
  }
  if (self.hasPacked) {
    [output writeBool:2 value:self.packed];
  }
  if (self.hasDeprecated) {
    [output writeBool:3 value:self.deprecated];
  }
  if (self.hasExperimentalMapKey) {
    [output writeString:9 value:self.experimentalMapKey];
  }
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCtype) {
    size += computeEnumSize(1, self.ctype);
  }
  if (self.hasPacked) {
    size += computeBoolSize(2, self.packed);
  }
  if (self.hasDeprecated) {
    size += computeBoolSize(3, self.deprecated);
  }
  if (self.hasExperimentalMapKey) {
    size += computeStringSize(9, self.experimentalMapKey);
  }
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBFieldOptions*) parseFromData:(NSData*) data {
  return (BatPBFieldOptions*)[[[BatPBFieldOptions builder] mergeFromData:data] build];
}
+ (BatPBFieldOptions*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFieldOptions*)[[[BatPBFieldOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBFieldOptions*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBFieldOptions*)[[[BatPBFieldOptions builder] mergeFromInputStream:input] build];
}
+ (BatPBFieldOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFieldOptions*)[[[BatPBFieldOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBFieldOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBFieldOptions*)[[[BatPBFieldOptions builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBFieldOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBFieldOptions*)[[[BatPBFieldOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBFieldOptions_Builder*) builder {
  return [[[BatPBFieldOptions_Builder alloc] init] autorelease];
}
+ (BatPBFieldOptions_Builder*) builderWithPrototype:(BatPBFieldOptions*) prototype {
  return [[BatPBFieldOptions builder] mergeFrom:prototype];
}
- (BatPBFieldOptions_Builder*) builder {
  return [BatPBFieldOptions builder];
}
@end

BOOL PBFieldOptions_CTypeIsValidValue(PBFieldOptions_CType value) {
  switch (value) {
    case PBFieldOptions_CTypeCord:
    case PBFieldOptions_CTypeStringPiece:
      return YES;
    default:
      return NO;
  }
}
@interface BatPBFieldOptions_Builder()
@property (retain) BatPBFieldOptions* result;
@end

@implementation BatPBFieldOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBFieldOptions alloc] init] autorelease];
  }
  return self;
}
- (BatPBExtendableMessage*) internalGetResult {
  return result;
}
- (BatPBFieldOptions_Builder*) clear {
  self.result = [[[BatPBFieldOptions alloc] init] autorelease];
  return self;
}
- (BatPBFieldOptions_Builder*) clone {
  return [BatPBFieldOptions builderWithPrototype:result];
}
- (BatPBFieldOptions*) defaultInstance {
  return [BatPBFieldOptions defaultInstance];
}
- (BatPBFieldOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBFieldOptions*) buildPartial {
  BatPBFieldOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBFieldOptions_Builder*) mergeFrom:(BatPBFieldOptions*) other {
  if (other == [BatPBFieldOptions defaultInstance]) {
    return self;
  }
  if (other.hasCtype) {
    [self setCtype:other.ctype];
  }
  if (other.hasPacked) {
    [self setPacked:other.packed];
  }
  if (other.hasDeprecated) {
    [self setDeprecated:other.deprecated];
  }
  if (other.hasExperimentalMapKey) {
    [self setExperimentalMapKey:other.experimentalMapKey];
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBFieldOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBFieldOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (PBFieldOptions_CTypeIsValidValue(value)) {
          [self setCtype:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setPacked:[input readBool]];
        break;
      }
      case 24: {
        [self setDeprecated:[input readBool]];
        break;
      }
      case 74: {
        [self setExperimentalMapKey:[input readString]];
        break;
      }
      case 7994: {
        BatPBUninterpretedOption_Builder* subBuilder = [BatPBUninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCtype {
  return result.hasCtype;
}
- (PBFieldOptions_CType) ctype {
  return result.ctype;
}
- (BatPBFieldOptions_Builder*) setCtype:(PBFieldOptions_CType) value {
  result.hasCtype = YES;
  result.ctype = value;
  return self;
}
- (BatPBFieldOptions_Builder*) clearCtype {
  result.hasCtype = NO;
  result.ctype = PBFieldOptions_CTypeCord;
  return self;
}
- (BOOL) hasPacked {
  return result.hasPacked;
}
- (BOOL) packed {
  return result.packed;
}
- (BatPBFieldOptions_Builder*) setPacked:(BOOL) value {
  result.hasPacked = YES;
  result.packed = value;
  return self;
}
- (BatPBFieldOptions_Builder*) clearPacked {
  result.hasPacked = NO;
  result.packed = NO;
  return self;
}
- (BOOL) hasDeprecated {
  return result.hasDeprecated;
}
- (BOOL) deprecated {
  return result.deprecated;
}
- (BatPBFieldOptions_Builder*) setDeprecated:(BOOL) value {
  result.hasDeprecated = YES;
  result.deprecated = value;
  return self;
}
- (BatPBFieldOptions_Builder*) clearDeprecated {
  result.hasDeprecated = NO;
  result.deprecated = NO;
  return self;
}
- (BOOL) hasExperimentalMapKey {
  return result.hasExperimentalMapKey;
}
- (NSString*) experimentalMapKey {
  return result.experimentalMapKey;
}
- (BatPBFieldOptions_Builder*) setExperimentalMapKey:(NSString*) value {
  result.hasExperimentalMapKey = YES;
  result.experimentalMapKey = value;
  return self;
}
- (BatPBFieldOptions_Builder*) clearExperimentalMapKey {
  result.hasExperimentalMapKey = NO;
  result.experimentalMapKey = @"";
  return self;
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (BatPBFieldOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(BatPBUninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBFieldOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (BatPBFieldOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (BatPBFieldOptions_Builder*) addUninterpretedOption:(BatPBUninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface BatPBEnumOptions ()
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation BatPBEnumOptions

@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static BatPBEnumOptions* defaultPBEnumOptionsInstance = nil;
+ (void) initialize {
  if (self == [BatPBEnumOptions class]) {
    defaultPBEnumOptionsInstance = [[BatPBEnumOptions alloc] init];
  }
}
+ (BatPBEnumOptions*) defaultInstance {
  return defaultPBEnumOptionsInstance;
}
- (BatPBEnumOptions*) defaultInstance {
  return defaultPBEnumOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBEnumOptions*) parseFromData:(NSData*) data {
  return (BatPBEnumOptions*)[[[BatPBEnumOptions builder] mergeFromData:data] build];
}
+ (BatPBEnumOptions*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBEnumOptions*)[[[BatPBEnumOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBEnumOptions*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBEnumOptions*)[[[BatPBEnumOptions builder] mergeFromInputStream:input] build];
}
+ (BatPBEnumOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBEnumOptions*)[[[BatPBEnumOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBEnumOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBEnumOptions*)[[[BatPBEnumOptions builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBEnumOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBEnumOptions*)[[[BatPBEnumOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBEnumOptions_Builder*) builder {
  return [[[BatPBEnumOptions_Builder alloc] init] autorelease];
}
+ (BatPBEnumOptions_Builder*) builderWithPrototype:(BatPBEnumOptions*) prototype {
  return [[BatPBEnumOptions builder] mergeFrom:prototype];
}
- (BatPBEnumOptions_Builder*) builder {
  return [BatPBEnumOptions builder];
}
@end

@interface BatPBEnumOptions_Builder()
@property (retain) BatPBEnumOptions* result;
@end

@implementation BatPBEnumOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBEnumOptions alloc] init] autorelease];
  }
  return self;
}
- (BatPBExtendableMessage*) internalGetResult {
  return result;
}
- (BatPBEnumOptions_Builder*) clear {
  self.result = [[[BatPBEnumOptions alloc] init] autorelease];
  return self;
}
- (BatPBEnumOptions_Builder*) clone {
  return [BatPBEnumOptions builderWithPrototype:result];
}
- (BatPBEnumOptions*) defaultInstance {
  return [BatPBEnumOptions defaultInstance];
}
- (BatPBEnumOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBEnumOptions*) buildPartial {
  BatPBEnumOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBEnumOptions_Builder*) mergeFrom:(BatPBEnumOptions*) other {
  if (other == [BatPBEnumOptions defaultInstance]) {
    return self;
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBEnumOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBEnumOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 7994: {
        BatPBUninterpretedOption_Builder* subBuilder = [BatPBUninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (BatPBEnumOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(BatPBUninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBEnumOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (BatPBEnumOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (BatPBEnumOptions_Builder*) addUninterpretedOption:(BatPBUninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface BatPBEnumValueOptions ()
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation BatPBEnumValueOptions

@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static BatPBEnumValueOptions* defaultPBEnumValueOptionsInstance = nil;
+ (void) initialize {
  if (self == [BatPBEnumValueOptions class]) {
    defaultPBEnumValueOptionsInstance = [[BatPBEnumValueOptions alloc] init];
  }
}
+ (BatPBEnumValueOptions*) defaultInstance {
  return defaultPBEnumValueOptionsInstance;
}
- (BatPBEnumValueOptions*) defaultInstance {
  return defaultPBEnumValueOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBEnumValueOptions*) parseFromData:(NSData*) data {
  return (BatPBEnumValueOptions*)[[[BatPBEnumValueOptions builder] mergeFromData:data] build];
}
+ (BatPBEnumValueOptions*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBEnumValueOptions*)[[[BatPBEnumValueOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBEnumValueOptions*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBEnumValueOptions*)[[[BatPBEnumValueOptions builder] mergeFromInputStream:input] build];
}
+ (BatPBEnumValueOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBEnumValueOptions*)[[[BatPBEnumValueOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBEnumValueOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBEnumValueOptions*)[[[BatPBEnumValueOptions builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBEnumValueOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBEnumValueOptions*)[[[BatPBEnumValueOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBEnumValueOptions_Builder*) builder {
  return [[[BatPBEnumValueOptions_Builder alloc] init] autorelease];
}
+ (BatPBEnumValueOptions_Builder*) builderWithPrototype:(BatPBEnumValueOptions*) prototype {
  return [[BatPBEnumValueOptions builder] mergeFrom:prototype];
}
- (BatPBEnumValueOptions_Builder*) builder {
  return [BatPBEnumValueOptions builder];
}
@end

@interface BatPBEnumValueOptions_Builder()
@property (retain) BatPBEnumValueOptions* result;
@end

@implementation BatPBEnumValueOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBEnumValueOptions alloc] init] autorelease];
  }
  return self;
}
- (BatPBExtendableMessage*) internalGetResult {
  return result;
}
- (BatPBEnumValueOptions_Builder*) clear {
  self.result = [[[BatPBEnumValueOptions alloc] init] autorelease];
  return self;
}
- (BatPBEnumValueOptions_Builder*) clone {
  return [BatPBEnumValueOptions builderWithPrototype:result];
}
- (BatPBEnumValueOptions*) defaultInstance {
  return [BatPBEnumValueOptions defaultInstance];
}
- (BatPBEnumValueOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBEnumValueOptions*) buildPartial {
  BatPBEnumValueOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBEnumValueOptions_Builder*) mergeFrom:(BatPBEnumValueOptions*) other {
  if (other == [BatPBEnumValueOptions defaultInstance]) {
    return self;
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBEnumValueOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBEnumValueOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 7994: {
        BatPBUninterpretedOption_Builder* subBuilder = [BatPBUninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (BatPBEnumValueOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(BatPBUninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBEnumValueOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (BatPBEnumValueOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (BatPBEnumValueOptions_Builder*) addUninterpretedOption:(BatPBUninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface BatPBServiceOptions ()
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation BatPBServiceOptions

@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static BatPBServiceOptions* defaultPBServiceOptionsInstance = nil;
+ (void) initialize {
  if (self == [BatPBServiceOptions class]) {
    defaultPBServiceOptionsInstance = [[BatPBServiceOptions alloc] init];
  }
}
+ (BatPBServiceOptions*) defaultInstance {
  return defaultPBServiceOptionsInstance;
}
- (BatPBServiceOptions*) defaultInstance {
  return defaultPBServiceOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBServiceOptions*) parseFromData:(NSData*) data {
  return (BatPBServiceOptions*)[[[BatPBServiceOptions builder] mergeFromData:data] build];
}
+ (BatPBServiceOptions*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBServiceOptions*)[[[BatPBServiceOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBServiceOptions*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBServiceOptions*)[[[BatPBServiceOptions builder] mergeFromInputStream:input] build];
}
+ (BatPBServiceOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBServiceOptions*)[[[BatPBServiceOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBServiceOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBServiceOptions*)[[[BatPBServiceOptions builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBServiceOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBServiceOptions*)[[[BatPBServiceOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBServiceOptions_Builder*) builder {
  return [[[BatPBServiceOptions_Builder alloc] init] autorelease];
}
+ (BatPBServiceOptions_Builder*) builderWithPrototype:(BatPBServiceOptions*) prototype {
  return [[BatPBServiceOptions builder] mergeFrom:prototype];
}
- (BatPBServiceOptions_Builder*) builder {
  return [BatPBServiceOptions builder];
}
@end

@interface BatPBServiceOptions_Builder()
@property (retain) BatPBServiceOptions* result;
@end

@implementation BatPBServiceOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBServiceOptions alloc] init] autorelease];
  }
  return self;
}
- (BatPBExtendableMessage*) internalGetResult {
  return result;
}
- (BatPBServiceOptions_Builder*) clear {
  self.result = [[[BatPBServiceOptions alloc] init] autorelease];
  return self;
}
- (BatPBServiceOptions_Builder*) clone {
  return [BatPBServiceOptions builderWithPrototype:result];
}
- (BatPBServiceOptions*) defaultInstance {
  return [BatPBServiceOptions defaultInstance];
}
- (BatPBServiceOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBServiceOptions*) buildPartial {
  BatPBServiceOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBServiceOptions_Builder*) mergeFrom:(BatPBServiceOptions*) other {
  if (other == [BatPBServiceOptions defaultInstance]) {
    return self;
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBServiceOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBServiceOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 7994: {
        BatPBUninterpretedOption_Builder* subBuilder = [BatPBUninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (BatPBServiceOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(BatPBUninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBServiceOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (BatPBServiceOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (BatPBServiceOptions_Builder*) addUninterpretedOption:(BatPBUninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface BatPBMethodOptions ()
@property (retain) NSMutableArray* mutableUninterpretedOptionList;
@end

@implementation BatPBMethodOptions

@synthesize mutableUninterpretedOptionList;
- (void) dealloc {
  self.mutableUninterpretedOptionList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static BatPBMethodOptions* defaultPBMethodOptionsInstance = nil;
+ (void) initialize {
  if (self == [BatPBMethodOptions class]) {
    defaultPBMethodOptionsInstance = [[BatPBMethodOptions alloc] init];
  }
}
+ (BatPBMethodOptions*) defaultInstance {
  return defaultPBMethodOptionsInstance;
}
- (BatPBMethodOptions*) defaultInstance {
  return defaultPBMethodOptionsInstance;
}
- (NSArray*) uninterpretedOptionList {
  return mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  id value = [mutableUninterpretedOptionList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    [output writeMessage:999 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:1000
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (BatPBUninterpretedOption* element in self.uninterpretedOptionList) {
    size += computeMessageSize(999, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBMethodOptions*) parseFromData:(NSData*) data {
  return (BatPBMethodOptions*)[[[BatPBMethodOptions builder] mergeFromData:data] build];
}
+ (BatPBMethodOptions*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBMethodOptions*)[[[BatPBMethodOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBMethodOptions*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBMethodOptions*)[[[BatPBMethodOptions builder] mergeFromInputStream:input] build];
}
+ (BatPBMethodOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBMethodOptions*)[[[BatPBMethodOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBMethodOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBMethodOptions*)[[[BatPBMethodOptions builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBMethodOptions*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBMethodOptions*)[[[BatPBMethodOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBMethodOptions_Builder*) builder {
  return [[[BatPBMethodOptions_Builder alloc] init] autorelease];
}
+ (BatPBMethodOptions_Builder*) builderWithPrototype:(BatPBMethodOptions*) prototype {
  return [[BatPBMethodOptions builder] mergeFrom:prototype];
}
- (BatPBMethodOptions_Builder*) builder {
  return [BatPBMethodOptions builder];
}
@end

@interface BatPBMethodOptions_Builder()
@property (retain) BatPBMethodOptions* result;
@end

@implementation BatPBMethodOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBMethodOptions alloc] init] autorelease];
  }
  return self;
}
- (BatPBExtendableMessage*) internalGetResult {
  return result;
}
- (BatPBMethodOptions_Builder*) clear {
  self.result = [[[BatPBMethodOptions alloc] init] autorelease];
  return self;
}
- (BatPBMethodOptions_Builder*) clone {
  return [BatPBMethodOptions builderWithPrototype:result];
}
- (BatPBMethodOptions*) defaultInstance {
  return [BatPBMethodOptions defaultInstance];
}
- (BatPBMethodOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBMethodOptions*) buildPartial {
  BatPBMethodOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBMethodOptions_Builder*) mergeFrom:(BatPBMethodOptions*) other {
  if (other == [BatPBMethodOptions defaultInstance]) {
    return self;
  }
  if (other.mutableUninterpretedOptionList.count > 0) {
    if (result.mutableUninterpretedOptionList == nil) {
      result.mutableUninterpretedOptionList = [NSMutableArray array];
    }
    [result.mutableUninterpretedOptionList addObjectsFromArray:other.mutableUninterpretedOptionList];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBMethodOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBMethodOptions_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 7994: {
        BatPBUninterpretedOption_Builder* subBuilder = [BatPBUninterpretedOption builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUninterpretedOption:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) uninterpretedOptionList {
  if (result.mutableUninterpretedOptionList == nil) { return [NSArray array]; }
  return result.mutableUninterpretedOptionList;
}
- (BatPBUninterpretedOption*) uninterpretedOptionAtIndex:(int32_t) index {
  return [result uninterpretedOptionAtIndex:index];
}
- (BatPBMethodOptions_Builder*) replaceUninterpretedOptionAtIndex:(int32_t) index with:(BatPBUninterpretedOption*) value {
  [result.mutableUninterpretedOptionList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBMethodOptions_Builder*) addAllUninterpretedOption:(NSArray*) values {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObjectsFromArray:values];
  return self;
}
- (BatPBMethodOptions_Builder*) clearUninterpretedOptionList {
  result.mutableUninterpretedOptionList = nil;
  return self;
}
- (BatPBMethodOptions_Builder*) addUninterpretedOption:(BatPBUninterpretedOption*) value {
  if (result.mutableUninterpretedOptionList == nil) {
    result.mutableUninterpretedOptionList = [NSMutableArray array];
  }
  [result.mutableUninterpretedOptionList addObject:value];
  return self;
}
@end

@interface BatPBUninterpretedOption ()
@property (retain) NSMutableArray* mutableNameList;
@property (retain) NSString* identifierValue;
@property int64_t positiveIntValue;
@property int64_t negativeIntValue;
@property Float64 doubleValue;
@property (retain) NSData* stringValue;
@end

@implementation BatPBUninterpretedOption

@synthesize mutableNameList;
- (BOOL) hasIdentifierValue {
  return !!hasIdentifierValue_;
}
- (void) setHasIdentifierValue:(BOOL) value {
  hasIdentifierValue_ = !!value;
}
@synthesize identifierValue;
- (BOOL) hasPositiveIntValue {
  return !!hasPositiveIntValue_;
}
- (void) setHasPositiveIntValue:(BOOL) value {
  hasPositiveIntValue_ = !!value;
}
@synthesize positiveIntValue;
- (BOOL) hasNegativeIntValue {
  return !!hasNegativeIntValue_;
}
- (void) setHasNegativeIntValue:(BOOL) value {
  hasNegativeIntValue_ = !!value;
}
@synthesize negativeIntValue;
- (BOOL) hasDoubleValue {
  return !!hasDoubleValue_;
}
- (void) setHasDoubleValue:(BOOL) value {
  hasDoubleValue_ = !!value;
}
@synthesize doubleValue;
- (BOOL) hasStringValue {
  return !!hasStringValue_;
}
- (void) setHasStringValue:(BOOL) value {
  hasStringValue_ = !!value;
}
@synthesize stringValue;
- (void) dealloc {
  self.mutableNameList = nil;
  self.identifierValue = nil;
  self.stringValue = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.identifierValue = @"";
    self.positiveIntValue = 0L;
    self.negativeIntValue = 0L;
    self.doubleValue = 0;
    self.stringValue = [NSData data];
  }
  return self;
}
static BatPBUninterpretedOption* defaultPBUninterpretedOptionInstance = nil;
+ (void) initialize {
  if (self == [BatPBUninterpretedOption class]) {
    defaultPBUninterpretedOptionInstance = [[BatPBUninterpretedOption alloc] init];
  }
}
+ (BatPBUninterpretedOption*) defaultInstance {
  return defaultPBUninterpretedOptionInstance;
}
- (BatPBUninterpretedOption*) defaultInstance {
  return defaultPBUninterpretedOptionInstance;
}
- (NSArray*) nameList {
  return mutableNameList;
}
- (BatPBUninterpretedOption_NamePart*) nameAtIndex:(int32_t) index {
  id value = [mutableNameList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (BatPBUninterpretedOption_NamePart* element in self.nameList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  for (BatPBUninterpretedOption_NamePart* element in self.nameList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasIdentifierValue) {
    [output writeString:3 value:self.identifierValue];
  }
  if (self.hasPositiveIntValue) {
    [output writeUInt64:4 value:self.positiveIntValue];
  }
  if (self.hasNegativeIntValue) {
    [output writeInt64:5 value:self.negativeIntValue];
  }
  if (self.hasDoubleValue) {
    [output writeDouble:6 value:self.doubleValue];
  }
  if (self.hasStringValue) {
    [output writeData:7 value:self.stringValue];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (BatPBUninterpretedOption_NamePart* element in self.nameList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasIdentifierValue) {
    size += computeStringSize(3, self.identifierValue);
  }
  if (self.hasPositiveIntValue) {
    size += computeUInt64Size(4, self.positiveIntValue);
  }
  if (self.hasNegativeIntValue) {
    size += computeInt64Size(5, self.negativeIntValue);
  }
  if (self.hasDoubleValue) {
    size += computeDoubleSize(6, self.doubleValue);
  }
  if (self.hasStringValue) {
    size += computeDataSize(7, self.stringValue);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBUninterpretedOption*) parseFromData:(NSData*) data {
  return (BatPBUninterpretedOption*)[[[BatPBUninterpretedOption builder] mergeFromData:data] build];
}
+ (BatPBUninterpretedOption*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBUninterpretedOption*)[[[BatPBUninterpretedOption builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBUninterpretedOption*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBUninterpretedOption*)[[[BatPBUninterpretedOption builder] mergeFromInputStream:input] build];
}
+ (BatPBUninterpretedOption*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBUninterpretedOption*)[[[BatPBUninterpretedOption builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBUninterpretedOption*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBUninterpretedOption*)[[[BatPBUninterpretedOption builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBUninterpretedOption*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBUninterpretedOption*)[[[BatPBUninterpretedOption builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBUninterpretedOption_Builder*) builder {
  return [[[BatPBUninterpretedOption_Builder alloc] init] autorelease];
}
+ (BatPBUninterpretedOption_Builder*) builderWithPrototype:(BatPBUninterpretedOption*) prototype {
  return [[BatPBUninterpretedOption builder] mergeFrom:prototype];
}
- (BatPBUninterpretedOption_Builder*) builder {
  return [BatPBUninterpretedOption builder];
}
@end

@interface BatPBUninterpretedOption_NamePart ()
@property (retain) NSString* namePart;
@property BOOL isExtension;
@end

@implementation BatPBUninterpretedOption_NamePart

- (BOOL) hasNamePart {
  return !!hasNamePart_;
}
- (void) setHasNamePart:(BOOL) value {
  hasNamePart_ = !!value;
}
@synthesize namePart;
- (BOOL) hasIsExtension {
  return !!hasIsExtension_;
}
- (void) setHasIsExtension:(BOOL) value {
  hasIsExtension_ = !!value;
}
- (BOOL) isExtension {
  return !!isExtension_;
}
- (void) setIsExtension:(BOOL) value {
  isExtension_ = !!value;
}
- (void) dealloc {
  self.namePart = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.namePart = @"";
    self.isExtension = NO;
  }
  return self;
}
static BatPBUninterpretedOption_NamePart* defaultPBUninterpretedOption_NamePartInstance = nil;
+ (void) initialize {
  if (self == [BatPBUninterpretedOption_NamePart class]) {
    defaultPBUninterpretedOption_NamePartInstance = [[BatPBUninterpretedOption_NamePart alloc] init];
  }
}
+ (BatPBUninterpretedOption_NamePart*) defaultInstance {
  return defaultPBUninterpretedOption_NamePartInstance;
}
- (BatPBUninterpretedOption_NamePart*) defaultInstance {
  return defaultPBUninterpretedOption_NamePartInstance;
}
- (BOOL) isInitialized {
  if (!self.hasNamePart) {
    return NO;
  }
  if (!self.hasIsExtension) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(BatPBCodedOutputStream*) output {
  if (self.hasNamePart) {
    [output writeString:1 value:self.namePart];
  }
  if (self.hasIsExtension) {
    [output writeBool:2 value:self.isExtension];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasNamePart) {
    size += computeStringSize(1, self.namePart);
  }
  if (self.hasIsExtension) {
    size += computeBoolSize(2, self.isExtension);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BatPBUninterpretedOption_NamePart*) parseFromData:(NSData*) data {
  return (BatPBUninterpretedOption_NamePart*)[[[BatPBUninterpretedOption_NamePart builder] mergeFromData:data] build];
}
+ (BatPBUninterpretedOption_NamePart*) parseFromData:(NSData*) data extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBUninterpretedOption_NamePart*)[[[BatPBUninterpretedOption_NamePart builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BatPBUninterpretedOption_NamePart*) parseFromInputStream:(NSInputStream*) input {
  return (BatPBUninterpretedOption_NamePart*)[[[BatPBUninterpretedOption_NamePart builder] mergeFromInputStream:input] build];
}
+ (BatPBUninterpretedOption_NamePart*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBUninterpretedOption_NamePart*)[[[BatPBUninterpretedOption_NamePart builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBUninterpretedOption_NamePart*) parseFromCodedInputStream:(BatPBCodedInputStream*) input {
  return (BatPBUninterpretedOption_NamePart*)[[[BatPBUninterpretedOption_NamePart builder] mergeFromCodedInputStream:input] build];
}
+ (BatPBUninterpretedOption_NamePart*) parseFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  return (BatPBUninterpretedOption_NamePart*)[[[BatPBUninterpretedOption_NamePart builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BatPBUninterpretedOption_NamePart_Builder*) builder {
  return [[[BatPBUninterpretedOption_NamePart_Builder alloc] init] autorelease];
}
+ (BatPBUninterpretedOption_NamePart_Builder*) builderWithPrototype:(BatPBUninterpretedOption_NamePart*) prototype {
  return [[BatPBUninterpretedOption_NamePart builder] mergeFrom:prototype];
}
- (BatPBUninterpretedOption_NamePart_Builder*) builder {
  return [BatPBUninterpretedOption_NamePart builder];
}
@end

@interface BatPBUninterpretedOption_NamePart_Builder()
@property (retain) BatPBUninterpretedOption_NamePart* result;
@end

@implementation BatPBUninterpretedOption_NamePart_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBUninterpretedOption_NamePart alloc] init] autorelease];
  }
  return self;
}
- (BatPBGeneratedMessage*) internalGetResult {
  return result;
}
- (BatPBUninterpretedOption_NamePart_Builder*) clear {
  self.result = [[[BatPBUninterpretedOption_NamePart alloc] init] autorelease];
  return self;
}
- (BatPBUninterpretedOption_NamePart_Builder*) clone {
  return [BatPBUninterpretedOption_NamePart builderWithPrototype:result];
}
- (BatPBUninterpretedOption_NamePart*) defaultInstance {
  return [BatPBUninterpretedOption_NamePart defaultInstance];
}
- (BatPBUninterpretedOption_NamePart*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBUninterpretedOption_NamePart*) buildPartial {
  BatPBUninterpretedOption_NamePart* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBUninterpretedOption_NamePart_Builder*) mergeFrom:(BatPBUninterpretedOption_NamePart*) other {
  if (other == [BatPBUninterpretedOption_NamePart defaultInstance]) {
    return self;
  }
  if (other.hasNamePart) {
    [self setNamePart:other.namePart];
  }
  if (other.hasIsExtension) {
    [self setIsExtension:other.isExtension];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBUninterpretedOption_NamePart_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBUninterpretedOption_NamePart_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setNamePart:[input readString]];
        break;
      }
      case 16: {
        [self setIsExtension:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasNamePart {
  return result.hasNamePart;
}
- (NSString*) namePart {
  return result.namePart;
}
- (BatPBUninterpretedOption_NamePart_Builder*) setNamePart:(NSString*) value {
  result.hasNamePart = YES;
  result.namePart = value;
  return self;
}
- (BatPBUninterpretedOption_NamePart_Builder*) clearNamePart {
  result.hasNamePart = NO;
  result.namePart = @"";
  return self;
}
- (BOOL) hasIsExtension {
  return result.hasIsExtension;
}
- (BOOL) isExtension {
  return result.isExtension;
}
- (BatPBUninterpretedOption_NamePart_Builder*) setIsExtension:(BOOL) value {
  result.hasIsExtension = YES;
  result.isExtension = value;
  return self;
}
- (BatPBUninterpretedOption_NamePart_Builder*) clearIsExtension {
  result.hasIsExtension = NO;
  result.isExtension = NO;
  return self;
}
@end

@interface BatPBUninterpretedOption_Builder()
@property (retain) BatPBUninterpretedOption* result;
@end

@implementation BatPBUninterpretedOption_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BatPBUninterpretedOption alloc] init] autorelease];
  }
  return self;
}
- (BatPBGeneratedMessage*) internalGetResult {
  return result;
}
- (BatPBUninterpretedOption_Builder*) clear {
  self.result = [[[BatPBUninterpretedOption alloc] init] autorelease];
  return self;
}
- (BatPBUninterpretedOption_Builder*) clone {
  return [BatPBUninterpretedOption builderWithPrototype:result];
}
- (BatPBUninterpretedOption*) defaultInstance {
  return [BatPBUninterpretedOption defaultInstance];
}
- (BatPBUninterpretedOption*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BatPBUninterpretedOption*) buildPartial {
  BatPBUninterpretedOption* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BatPBUninterpretedOption_Builder*) mergeFrom:(BatPBUninterpretedOption*) other {
  if (other == [BatPBUninterpretedOption defaultInstance]) {
    return self;
  }
  if (other.mutableNameList.count > 0) {
    if (result.mutableNameList == nil) {
      result.mutableNameList = [NSMutableArray array];
    }
    [result.mutableNameList addObjectsFromArray:other.mutableNameList];
  }
  if (other.hasIdentifierValue) {
    [self setIdentifierValue:other.identifierValue];
  }
  if (other.hasPositiveIntValue) {
    [self setPositiveIntValue:other.positiveIntValue];
  }
  if (other.hasNegativeIntValue) {
    [self setNegativeIntValue:other.negativeIntValue];
  }
  if (other.hasDoubleValue) {
    [self setDoubleValue:other.doubleValue];
  }
  if (other.hasStringValue) {
    [self setStringValue:other.stringValue];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BatPBUninterpretedOption_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[BatPBExtensionRegistry emptyRegistry]];
}
- (BatPBUninterpretedOption_Builder*) mergeFromCodedInputStream:(BatPBCodedInputStream*) input extensionRegistry:(BatPBExtensionRegistry*) extensionRegistry {
  BatPBUnknownFieldSet_Builder* unknownFields = [BatPBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 18: {
        BatPBUninterpretedOption_NamePart_Builder* subBuilder = [BatPBUninterpretedOption_NamePart builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addName:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setIdentifierValue:[input readString]];
        break;
      }
      case 32: {
        [self setPositiveIntValue:[input readUInt64]];
        break;
      }
      case 40: {
        [self setNegativeIntValue:[input readInt64]];
        break;
      }
      case 49: {
        [self setDoubleValue:[input readDouble]];
        break;
      }
      case 58: {
        [self setStringValue:[input readData]];
        break;
      }
    }
  }
}
- (NSArray*) nameList {
  if (result.mutableNameList == nil) { return [NSArray array]; }
  return result.mutableNameList;
}
- (BatPBUninterpretedOption_NamePart*) nameAtIndex:(int32_t) index {
  return [result nameAtIndex:index];
}
- (BatPBUninterpretedOption_Builder*) replaceNameAtIndex:(int32_t) index with:(BatPBUninterpretedOption_NamePart*) value {
  [result.mutableNameList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BatPBUninterpretedOption_Builder*) addAllName:(NSArray*) values {
  if (result.mutableNameList == nil) {
    result.mutableNameList = [NSMutableArray array];
  }
  [result.mutableNameList addObjectsFromArray:values];
  return self;
}
- (BatPBUninterpretedOption_Builder*) clearNameList {
  result.mutableNameList = nil;
  return self;
}
- (BatPBUninterpretedOption_Builder*) addName:(BatPBUninterpretedOption_NamePart*) value {
  if (result.mutableNameList == nil) {
    result.mutableNameList = [NSMutableArray array];
  }
  [result.mutableNameList addObject:value];
  return self;
}
- (BOOL) hasIdentifierValue {
  return result.hasIdentifierValue;
}
- (NSString*) identifierValue {
  return result.identifierValue;
}
- (BatPBUninterpretedOption_Builder*) setIdentifierValue:(NSString*) value {
  result.hasIdentifierValue = YES;
  result.identifierValue = value;
  return self;
}
- (BatPBUninterpretedOption_Builder*) clearIdentifierValue {
  result.hasIdentifierValue = NO;
  result.identifierValue = @"";
  return self;
}
- (BOOL) hasPositiveIntValue {
  return result.hasPositiveIntValue;
}
- (int64_t) positiveIntValue {
  return result.positiveIntValue;
}
- (BatPBUninterpretedOption_Builder*) setPositiveIntValue:(int64_t) value {
  result.hasPositiveIntValue = YES;
  result.positiveIntValue = value;
  return self;
}
- (BatPBUninterpretedOption_Builder*) clearPositiveIntValue {
  result.hasPositiveIntValue = NO;
  result.positiveIntValue = 0L;
  return self;
}
- (BOOL) hasNegativeIntValue {
  return result.hasNegativeIntValue;
}
- (int64_t) negativeIntValue {
  return result.negativeIntValue;
}
- (BatPBUninterpretedOption_Builder*) setNegativeIntValue:(int64_t) value {
  result.hasNegativeIntValue = YES;
  result.negativeIntValue = value;
  return self;
}
- (BatPBUninterpretedOption_Builder*) clearNegativeIntValue {
  result.hasNegativeIntValue = NO;
  result.negativeIntValue = 0L;
  return self;
}
- (BOOL) hasDoubleValue {
  return result.hasDoubleValue;
}
- (Float64) doubleValue {
  return result.doubleValue;
}
- (BatPBUninterpretedOption_Builder*) setDoubleValue:(Float64) value {
  result.hasDoubleValue = YES;
  result.doubleValue = value;
  return self;
}
- (BatPBUninterpretedOption_Builder*) clearDoubleValue {
  result.hasDoubleValue = NO;
  result.doubleValue = 0;
  return self;
}
- (BOOL) hasStringValue {
  return result.hasStringValue;
}
- (NSData*) stringValue {
  return result.stringValue;
}
- (BatPBUninterpretedOption_Builder*) setStringValue:(NSData*) value {
  result.hasStringValue = YES;
  result.stringValue = value;
  return self;
}
- (BatPBUninterpretedOption_Builder*) clearStringValue {
  result.hasStringValue = NO;
  result.stringValue = [NSData data];
  return self;
}
@end

